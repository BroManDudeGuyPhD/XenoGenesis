<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://xenogenesis.sirbrobot.com/" />
    <meta property="og:title" content="XenoGenesis - Gaming Platform" />
    <meta property="og:description" content="Join XenoGenesis for an immersive gaming experience with chat, rooms, and multiplayer games." />
    <meta property="og:image" content="https://xenogenesis.sirbrobot.com/client/img/favicon.png" />
    <meta property="og:site_name" content="XenoGenesis" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary" />
    <meta property="twitter:url" content="https://xenogenesis.sirbrobot.com/" />
    <meta property="twitter:title" content="XenoGenesis - Gaming Platform" />
    <meta property="twitter:description" content="Join XenoGenesis for an immersive gaming experience with chat, rooms, and multiplayer games." />
    <meta property="twitter:image" content="https://xenogenesis.sirbrobot.com/client/img/favicon.png" />
    
    <!-- Additional Meta Tags -->
    <meta name="description" content="XenoGenesis - Gaming platform with chat, rooms, and multiplayer games" />
    <meta name="keywords" content="gaming, multiplayer, chat, rooms, xenogenesis" />
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css"
        integrity="sha256-mmgLkCYLUQbXn0B1SRqzHar6dCnv9oZFPEC1g1cwlkk=" crossorigin="anonymous" />
    <link rel="stylesheet" href="/client/css/style.css?v=2025100701">
    <title>X</title>
    <link rel="icon" type="image/x-icon" href="../client/img/favicon.png">
</head>

<body class="login-page" style="background-color: #000000;">
    <!-- <div id="signDiv" class="signIn">
        Username: <input id="signDiv-username" type="text"></input><br>
        Password: <input id="signDiv-password" type="password"></input><br>
        <button id="signDiv-signIn">Sign In</button>
        <button id="signDiv-signUp">Sign Up</button>
    </div> -->

    <header class="header">
        <nav class="navbar">
            <a href="#" class="nav-logo">XenoGenesis</a>
            <ul class="nav-menu">
                <!-- <li class="nav-item">
                    <a href="#" class="nav-link">Game</a>
                </li>
                <li class="nav-item">
                    <a href="#" class="nav-link">About</a>
                </li> -->
                <li class="nav-item">
                    <button id="loginNav"><span>Login</span></button>
                </li>
                <li class="nav-item profile-menu-container" style="display: none; position: relative;">
                    <button id="profileMenuBtn" style="
                        background: linear-gradient(135deg, #667aff, #7386ff);
                        color: white;
                        border: none;
                        padding: 8px 16px;
                        border-radius: 20px;
                        cursor: pointer;
                        font-size: 14px;
                        display: flex;
                        align-items: center;
                        gap: 8px;
                        transition: all 0.3s ease;
                        box-shadow: 0 2px 8px rgba(102, 122, 255, 0.3);
                    " onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 4px 15px rgba(102, 122, 255, 0.4)'"
                       onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='0 2px 8px rgba(102, 122, 255, 0.3)'">
                        <i class="fas fa-user-circle" style="font-size: 16px;"></i>
                        <span id="profileUsername">Player</span>
                        <i class="fas fa-chevron-down" style="font-size: 12px; transition: transform 0.3s ease;" id="profileChevron"></i>
                    </button>
                    <div id="profileDropdown" style="
                        position: absolute;
                        top: 100%;
                        right: 0;
                        background: linear-gradient(145deg, 
                            rgba(43, 45, 59, 0.98) 0%, 
                            rgba(54, 57, 63, 0.95) 100%);
                        backdrop-filter: blur(20px);
                        -webkit-backdrop-filter: blur(20px);
                        border: 1px solid rgba(255, 255, 255, 0.15);
                        border-radius: 12px;
                        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
                        z-index: 1000;
                        margin-top: 8px;
                        min-width: 200px;
                        display: none;
                        animation: slideDown 0.3s ease;
                    ">
                        <div style="padding: 12px 0;">
                            <button class="profile-menu-item" style="
                                width: 100%;
                                padding: 12px 16px;
                                background: transparent;
                                border: none;
                                color: #dcddde;
                                cursor: pointer;
                                transition: background 0.2s ease;
                                display: flex;
                                align-items: center;
                                gap: 12px;
                                font-size: 14px;
                            " onmouseover="this.style.background='rgba(255, 255, 255, 0.1)'"
                               onmouseout="this.style.background='transparent'">
                                <i class="fas fa-cog" style="width: 16px;"></i>
                                <span>Settings</span>
                            </button>
                            <button class="profile-menu-item" style="
                                width: 100%;
                                padding: 12px 16px;
                                background: transparent;
                                border: none;
                                color: #dcddde;
                                cursor: pointer;
                                transition: background 0.2s ease;
                                display: flex;
                                align-items: center;
                                gap: 12px;
                                font-size: 14px;
                            " onmouseover="this.style.background='rgba(255, 255, 255, 0.1)'"
                               onmouseout="this.style.background='transparent'">
                                <i class="fas fa-chart-line" style="width: 16px;"></i>
                                <span>Statistics</span>
                            </button>
                            <button class="profile-menu-item" style="
                                width: 100%;
                                padding: 12px 16px;
                                background: transparent;
                                border: none;
                                color: #dcddde;
                                cursor: pointer;
                                transition: background 0.2s ease;
                                display: flex;
                                align-items: center;
                                gap: 12px;
                                font-size: 14px;
                            " onmouseover="this.style.background='rgba(255, 255, 255, 0.1)'"
                               onmouseout="this.style.background='transparent'">
                                <i class="fas fa-trophy" style="width: 16px;"></i>
                                <span>Achievements</span>
                            </button>
                            <hr style="margin: 8px 16px; border: none; height: 1px; background: rgba(255, 255, 255, 0.1);">
                            <button id="logoutBtn" class="profile-menu-item" style="
                                width: 100%;
                                padding: 12px 16px;
                                background: transparent;
                                border: none;
                                color: #f04747;
                                cursor: pointer;
                                transition: background 0.2s ease;
                                display: flex;
                                align-items: center;
                                gap: 12px;
                                font-size: 14px;
                            " onmouseover="this.style.background='rgba(240, 71, 71, 0.1)'"
                               onmouseout="this.style.background='transparent'">
                                <i class="fas fa-sign-out-alt" style="width: 16px;"></i>
                                <span>Logout</span>
                            </button>
                        </div>
                    </div>
                </li>
            </ul>
        </nav>
    </header>


    <div id="id01" class="modal" style="
        background: rgba(0, 0, 0, 0.75);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
    ">
        <div class="modal-content animate" style="
            max-width: 420px;
            background: linear-gradient(145deg, 
                rgba(43, 45, 59, 0.98) 0%, 
                rgba(54, 57, 63, 0.95) 100%);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.15);
            box-shadow: 
                0 20px 60px rgba(0, 0, 0, 0.5),
                0 8px 32px rgba(0, 0, 0, 0.3),
                inset 0 1px 0 rgba(255, 255, 255, 0.1);
        ">
            <div class="imgcontainer">
                <span onclick="document.getElementById('id01').style.display='none'" 
                      class="close"
                      title="Close Modal"
                      style="
                          color: #b9bbbe;
                          font-size: 28px;
                          transition: all 0.2s ease;
                      "
                      onmouseover="this.style.color='#ffffff'; this.style.transform='scale(1.1)'"
                      onmouseout="this.style.color='#b9bbbe'; this.style.transform='scale(1)'">&times;</span>
                <!-- <img src="../../img/favicon.png" alt="Avatar" class="avatar"> -->
            </div>

            <div class="container" style="text-align: center; padding: 30px;">
                <div style="
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 10px;
                    margin-bottom: 8px;
                ">
                    <div style="
                        width: 3px;
                        height: 3px;
                        background: linear-gradient(135deg, #667aff, #7386ff);
                        border-radius: 50%;
                        animation: subtlePulse 2s infinite;
                    "></div>
                    <h3 style="
                        color: #dcddde; 
                        font-weight: 600; 
                        font-size: 20px;
                        margin: 0;
                        background: linear-gradient(135deg, #dcddde, #ffffff);
                        -webkit-background-clip: text;
                        -webkit-text-fill-color: transparent;
                        background-clip: text;
                    ">Welcome to XenoGenesis</h3>
                    <div style="
                        width: 3px;
                        height: 3px;
                        background: linear-gradient(135deg, #667aff, #7386ff);
                        border-radius: 50%;
                        animation: subtlePulse 2s infinite;
                    "></div>
                </div>
                
                <p style="
                    color: #b9bbbe; 
                    margin-bottom: 24px; 
                    font-size: 13px;
                    opacity: 0.8;
                    line-height: 1.4;
                ">Sign in to access the game platform</p>
                
                <div style="text-align: left; margin-bottom: 16px;">
                    <label for="uname" style="
                        color: #dcddde;
                        font-weight: 500;
                        font-size: 13px;
                        margin-bottom: 6px;
                        display: block;
                    "><b>Username</b></label>
                    <input type="text" 
                           placeholder="Enter Username" 
                           id="username" 
                           name="uname" 
                           required
                           style="
                               width: 100%;
                               padding: 14px 16px;
                               background: rgba(32, 34, 37, 0.8);
                               border: 1px solid rgba(114, 118, 125, 0.4);
                               border-radius: 8px;
                               color: #dcddde;
                               font-size: 14px;
                               font-weight: 400;
                               transition: all 0.3s ease;
                               box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
                               backdrop-filter: blur(10px);
                               box-sizing: border-box;
                           "
                           onfocus="
                               this.style.borderColor='rgba(102, 122, 255, 0.6)';
                               this.style.boxShadow='inset 0 1px 3px rgba(0, 0, 0, 0.2), 0 0 0 3px rgba(102, 122, 255, 0.15)';
                           "
                           onblur="
                               this.style.borderColor='rgba(114, 118, 125, 0.4)';
                               this.style.boxShadow='inset 0 1px 3px rgba(0, 0, 0, 0.2)';
                           "
                    >
                </div>

                <div style="text-align: left; margin-bottom: 24px;">
                    <label for="psw" style="
                        color: #dcddde;
                        font-weight: 500;
                        font-size: 13px;
                        margin-bottom: 6px;
                        display: block;
                    "><b>Password</b></label>
                    <input type="password" 
                           placeholder="Enter Password" 
                           id="password" 
                           name="psw" 
                           required
                           style="
                               width: 100%;
                               padding: 14px 16px;
                               background: rgba(32, 34, 37, 0.8);
                               border: 1px solid rgba(114, 118, 125, 0.4);
                               border-radius: 8px;
                               color: #dcddde;
                               font-size: 14px;
                               font-weight: 400;
                               transition: all 0.3s ease;
                               box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
                               backdrop-filter: blur(10px);
                               box-sizing: border-box;
                           "
                           onfocus="
                               this.style.borderColor='rgba(102, 122, 255, 0.6)';
                               this.style.boxShadow='inset 0 1px 3px rgba(0, 0, 0, 0.2), 0 0 0 3px rgba(102, 122, 255, 0.15)';
                           "
                           onblur="
                               this.style.borderColor='rgba(114, 118, 125, 0.4)';
                               this.style.boxShadow='inset 0 1px 3px rgba(0, 0, 0, 0.2)';
                           "
                           onkeypress="if(event.key === 'Enter') document.getElementById('signIn').click()"
                    >
                </div>

                <div style="display: flex; gap: 12px; justify-content: center; margin-bottom: 20px;">
                    <button type="button" id="signIn" style="
                        background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%) !important;
                        color: white !important;
                        padding: 16px 24px;
                        border: 1px solid rgba(34, 197, 94, 0.4) !important;
                        border-radius: 7px;
                        cursor: pointer;
                        font-weight: 600;
                        font-size: 16px;
                        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
                        box-shadow: 0 3px 12px rgba(34, 197, 94, 0.3) !important;
                        display: flex;
                        align-items: center;
                        gap: 8px;
                        min-height: 48px;
                        min-width: 120px;
                        justify-content: center;
                        -webkit-tap-highlight-color: rgba(34, 197, 94, 0.2);
                        touch-action: manipulation;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                    "
                    onmouseover="
                        this.style.setProperty('background', 'linear-gradient(135deg, #16a34a 0%, #22c55e 100%)', 'important');
                        this.style.setProperty('transform', 'translateY(-2px)', 'important');
                        this.style.setProperty('box-shadow', '0 4px 16px rgba(34, 197, 94, 0.4)', 'important');
                        this.style.setProperty('border-color', 'rgba(34, 197, 94, 0.6)', 'important');
                    "
                    onmouseout="
                        this.style.setProperty('background', 'linear-gradient(135deg, #22c55e 0%, #16a34a 100%)', 'important');
                        this.style.setProperty('transform', 'translateY(0)', 'important');
                        this.style.setProperty('box-shadow', '0 3px 12px rgba(34, 197, 94, 0.3)', 'important');
                        this.style.setProperty('border-color', 'rgba(34, 197, 94, 0.4)', 'important');
                    "
                        <span style="font-size: 12px;">🔐</span>
                        Login
                    </button>
                    <button type="button" id="signUp" onclick="document.getElementById('signupModal').style.display='block'" style="
                        background: rgba(114, 118, 125, 0.15);
                        color: #b9bbbe;
                        padding: 12px 20px;
                        border: 1px solid rgba(114, 118, 125, 0.4);
                        border-radius: 7px;
                        cursor: pointer;
                        font-size: 14px;
                        font-weight: 500;
                        transition: all 0.2s ease;
                        backdrop-filter: blur(10px);
                        display: flex;
                        align-items: center;
                        gap: 6px;
                    "
                    onmouseover="
                        this.style.background='rgba(114, 118, 125, 0.25)';
                        this.style.color='#dcddde';
                        this.style.borderColor='rgba(114, 118, 125, 0.6)';
                        this.style.transform='translateY(-1px)';
                    "
                    onmouseout="
                        this.style.background='rgba(114, 118, 125, 0.15)';
                        this.style.color='#b9bbbe';
                        this.style.borderColor='rgba(114, 118, 125, 0.4)';
                        this.style.transform='translateY(0)';
                    ">
                        <span style="font-size: 12px;">✨</span>
                        Sign Up
                    </button>
                </div>
                
                <label style="
                    color: #b9bbbe;
                    font-size: 12px;
                    display: flex;
                    align-items: center;
                    gap: 8px;
                    justify-content: center;
                    opacity: 0.7;
                    margin-bottom: 16px;
                ">
                    <input type="checkbox" checked="checked" name="remember" style="
                        accent-color: rgba(102, 122, 255, 0.8);
                        transform: scale(0.9);
                    "> 
                    Remember me
                </label>
            </div>

            <div class="container" style="
                background: linear-gradient(135deg, rgba(241, 241, 241, 0.05), rgba(241, 241, 241, 0.02));
                border-top: 1px solid rgba(255, 255, 255, 0.08);
                backdrop-filter: blur(10px);
                padding: 20px 30px;
                text-align: center;
            ">
                <button type="button" 
                        onclick="document.getElementById('id01').style.display='none'"
                        style="
                            background: rgba(218, 86, 79, 0.1);
                            color: rgba(218, 86, 79, 0.9);
                            padding: 8px 16px;
                            border: 1px solid rgba(218, 86, 79, 0.3);
                            border-radius: 6px;
                            cursor: pointer;
                            font-size: 12px;
                            font-weight: 400;
                            transition: all 0.2s ease;
                            margin-right: 16px;
                        "
                        onmouseover="
                            this.style.background='rgba(218, 86, 79, 0.15)';
                            this.style.borderColor='rgba(218, 86, 79, 0.5)';
                        "
                        onmouseout="
                            this.style.background='rgba(218, 86, 79, 0.1)';
                            this.style.borderColor='rgba(218, 86, 79, 0.3)';
                        ">Cancel</button>
                <span class="psw" style="color: #b9bbbe; font-size: 12px; opacity: 0.7;">
                    Forgot <a href="#" style="color: rgba(102, 122, 255, 0.8); text-decoration: none;">password?</a>
                </span>
            </div>
        </div>
    </div>

    <!-- Signup Modal -->
    <div id="signupModal" class="modal" style="
        background: rgba(0, 0, 0, 0.75);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        display: none;
    ">
        <div class="modal-content animate" style="
            max-width: 420px;
            background: linear-gradient(145deg, 
                rgba(43, 45, 59, 0.98) 0%, 
                rgba(54, 57, 63, 0.95) 100%);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.15);
            box-shadow: 
                0 20px 60px rgba(0, 0, 0, 0.5),
                0 8px 32px rgba(0, 0, 0, 0.3),
                inset 0 1px 0 rgba(255, 255, 255, 0.1);
        ">
            <div class="imgcontainer">
                <span onclick="document.getElementById('signupModal').style.display='none'" 
                      class="close"
                      title="Close Modal"
                      style="
                          color: #b9bbbe;
                          font-size: 28px;
                          transition: all 0.2s ease;
                      "
                      onmouseover="this.style.color='#ffffff'; this.style.transform='scale(1.1)'"
                      onmouseout="this.style.color='#b9bbbe'; this.style.transform='scale(1)'">&times;</span>
            </div>

            <div class="container" style="text-align: center; padding: 30px;">
                <div style="
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 10px;
                    margin-bottom: 8px;
                ">
                    <div style="
                        width: 3px;
                        height: 3px;
                        background: linear-gradient(135deg, #667aff, #7386ff);
                        border-radius: 50%;
                        animation: subtlePulse 2s infinite;
                    "></div>
                    <h3 style="
                        color: #dcddde; 
                        font-weight: 600; 
                        margin: 0;
                        font-size: 24px;
                        letter-spacing: -0.5px;
                    ">Create Account</h3>
                    <div style="
                        width: 3px;
                        height: 3px;
                        background: linear-gradient(135deg, #667aff, #7386ff);
                        border-radius: 50%;
                        animation: subtlePulse 2s infinite 0.5s;
                    "></div>
                </div>
                
                <p style="
                    color: #b9bbbe; 
                    font-size: 14px; 
                    margin-bottom: 25px; 
                    opacity: 0.8;
                ">Join with your invite code</p>

                <div style="display: flex; flex-direction: column; gap: 15px;">
                    <div style="position: relative;">
                        <input type="text" id="signupUsername" placeholder="Username" style="
                            width: 100%;
                            padding: 12px 16px;
                            background: rgba(32, 34, 37, 0.6);
                            border: 1px solid rgba(114, 118, 125, 0.4);
                            border-radius: 8px;
                            color: #dcddde;
                            font-size: 14px;
                            font-weight: 400;
                            transition: all 0.2s ease;
                            backdrop-filter: blur(10px);
                            box-sizing: border-box;
                        "
                        onfocus="
                            this.style.borderColor='rgba(102, 122, 255, 0.6)';
                            this.style.background='rgba(32, 34, 37, 0.8)';
                        "
                        onblur="
                            this.style.borderColor='rgba(114, 118, 125, 0.4)';
                            this.style.background='rgba(32, 34, 37, 0.6)';
                        ">
                    </div>

                    <div style="position: relative;">
                        <input type="password" id="signupPassword" placeholder="Password" style="
                            width: 100%;
                            padding: 12px 16px;
                            background: rgba(32, 34, 37, 0.6);
                            border: 1px solid rgba(114, 118, 125, 0.4);
                            border-radius: 8px;
                            color: #dcddde;
                            font-size: 14px;
                            font-weight: 400;
                            transition: all 0.2s ease;
                            backdrop-filter: blur(10px);
                            box-sizing: border-box;
                        "
                        onfocus="
                            this.style.borderColor='rgba(102, 122, 255, 0.6)';
                            this.style.background='rgba(32, 34, 37, 0.8)';
                        "
                        onblur="
                            this.style.borderColor='rgba(114, 118, 125, 0.4)';
                            this.style.background='rgba(32, 34, 37, 0.6)';
                        "
                        oninput="validatePasswordRequirements()">
                        
                        <!-- Password Requirements Indicator -->
                        <div id="passwordRequirements" style="
                            margin-top: 8px;
                            padding: 8px 12px;
                            background: rgba(40, 43, 48, 0.8);
                            border-radius: 6px;
                            font-size: 11px;
                            line-height: 1.4;
                            display: none;
                        ">
                            <div id="lengthReq" style="color: #f04747; margin-bottom: 2px;">
                                <span>•</span> At least 6 characters
                            </div>
                        </div>
                    </div>

                    <div style="position: relative;">
                        <input type="password" id="signupConfirmPassword" placeholder="Confirm Password" style="
                            width: 100%;
                            padding: 12px 16px;
                            background: rgba(32, 34, 37, 0.6);
                            border: 1px solid rgba(114, 118, 125, 0.4);
                            border-radius: 8px;
                            color: #dcddde;
                            font-size: 14px;
                            font-weight: 400;
                            transition: all 0.2s ease;
                            backdrop-filter: blur(10px);
                            box-sizing: border-box;
                        "
                        onfocus="
                            this.style.borderColor='rgba(102, 122, 255, 0.6)';
                            this.style.background='rgba(32, 34, 37, 0.8)';
                        "
                        onblur="
                            this.style.borderColor='rgba(114, 118, 125, 0.4)';
                            this.style.background='rgba(32, 34, 37, 0.6)';
                        "
                        oninput="validatePasswordMatch()">
                        
                        <!-- Password Match Indicator -->
                        <div id="passwordMatchIndicator" style="
                            margin-top: 6px;
                            font-size: 11px;
                            display: none;
                        ">
                            <span id="passwordMatchText"></span>
                        </div>
                    </div>

                    <div style="position: relative;">
                        <input type="text" id="signupInviteCode" placeholder="Invite Code" style="
                            width: 100%;
                            padding: 12px 16px;
                            background: rgba(32, 34, 37, 0.6);
                            border: 1px solid rgba(114, 118, 125, 0.4);
                            border-radius: 8px;
                            color: #dcddde;
                            font-size: 14px;
                            font-weight: 400;
                            transition: all 0.2s ease;
                            backdrop-filter: blur(10px);
                            box-sizing: border-box;
                            text-transform: uppercase;
                        "
                        onfocus="
                            this.style.borderColor='rgba(102, 122, 255, 0.6)';
                            this.style.background='rgba(32, 34, 37, 0.8)';
                        "
                        onblur="
                            this.style.borderColor='rgba(114, 118, 125, 0.4)';
                            this.style.background='rgba(32, 34, 37, 0.6)';
                        "
                        oninput="this.value = this.value.toUpperCase()">
                        <div style="
                            position: absolute;
                            right: 12px;
                            top: 50%;
                            transform: translateY(-50%);
                            color: #7289da;
                            font-size: 12px;
                            opacity: 0.7;
                        ">✨</div>
                    </div>

                    <button type="button" id="createAccountBtn" style="
                        background: linear-gradient(135deg, rgba(67, 181, 129, 0.9) 0%, rgba(52, 168, 107, 0.9) 100%);
                        color: white;
                        padding: 14px 20px;
                        border: none;
                        border-radius: 8px;
                        cursor: pointer;
                        font-size: 15px;
                        font-weight: 600;
                        transition: all 0.2s ease;
                        box-shadow: 0 3px 8px rgba(67, 181, 129, 0.3);
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        gap: 8px;
                        margin-top: 10px;
                    "
                    onmouseover="
                        this.style.background='linear-gradient(135deg, rgba(67, 181, 129, 1) 0%, rgba(52, 168, 107, 1) 100%)';
                        this.style.transform='translateY(-1px)';
                        this.style.boxShadow='0 4px 12px rgba(67, 181, 129, 0.4)';
                    "
                    onmouseout="
                        this.style.background='linear-gradient(135deg, rgba(67, 181, 129, 0.9) 0%, rgba(52, 168, 107, 0.9) 100%)';
                        this.style.transform='translateY(0)';
                        this.style.boxShadow='0 3px 8px rgba(67, 181, 129, 0.3)';
                    ">
                        <span style="font-size: 12px;">🚀</span>
                        Create Account
                    </button>
                </div>
            </div>

            <div class="container" style="
                background: linear-gradient(135deg, rgba(241, 241, 241, 0.05), rgba(241, 241, 241, 0.02));
                border-top: 1px solid rgba(255, 255, 255, 0.08);
                backdrop-filter: blur(10px);
                padding: 20px 30px;
                text-align: center;
            ">
                <button type="button" 
                        onclick="document.getElementById('signupModal').style.display='none'"
                        style="
                            background: rgba(218, 86, 79, 0.1);
                            color: rgba(218, 86, 79, 0.9);
                            padding: 8px 16px;
                            border: 1px solid rgba(218, 86, 79, 0.3);
                            border-radius: 6px;
                            cursor: pointer;
                            font-size: 12px;
                            font-weight: 400;
                            transition: all 0.2s ease;
                            margin-right: 16px;
                        "
                        onmouseover="
                            this.style.background='rgba(218, 86, 79, 0.15)';
                            this.style.borderColor='rgba(218, 86, 79, 0.5)';
                        "
                        onmouseout="
                            this.style.background='rgba(218, 86, 79, 0.1)';
                            this.style.borderColor='rgba(218, 86, 79, 0.3)';
                        ">Cancel</button>
                <span class="psw" style="color: #b9bbbe; font-size: 12px; opacity: 0.7;">
                    Need an <a href="#" style="color: rgba(102, 122, 255, 0.8); text-decoration: none;">invite code?</a>
                </span>
            </div>
        </div>
    </div>

    <!-- Permanent Invite Code Modal -->
    <div id="permanentInviteModal" class="modal" style="
        display: none; 
        position: fixed; 
        z-index: 10000; 
        left: 0; 
        top: 0; 
        width: 100%; 
        height: 100%; 
        overflow: auto; 
        background-color: rgba(0, 0, 0, 0.6);
        backdrop-filter: blur(5px);
    ">
        <div class="modal-content animate" style="
            background: linear-gradient(145deg, rgba(54, 57, 63, 0.95), rgba(47, 49, 54, 0.95));
            backdrop-filter: blur(20px);
            border: 1px solid rgba(114, 118, 125, 0.3);
            margin: 8% auto;
            padding: 0;
            border-radius: 16px;
            width: 90%;
            max-width: 480px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            animation: modalSlideIn 0.4s ease-out;
        ">
            <div style="
                background: linear-gradient(135deg, #667aff, #7386ff);
                padding: 24px 32px;
                border-radius: 16px 16px 0 0;
                position: relative;
            ">
                <span onclick="document.getElementById('permanentInviteModal').style.display='none'" 
                      class="close" 
                      title="Close Modal"
                      style="
                          color: white;
                          float: right;
                          font-size: 28px;
                          font-weight: bold;
                          cursor: pointer;
                          line-height: 1;
                          margin-top: -4px;
                          transition: all 0.2s ease;
                      "
                      onmouseover="this.style.opacity='0.7'"
                      onmouseout="this.style.opacity='1'">&times;</span>
                <h2 style="color: white; margin: 0; font-size: 24px; font-weight: 600;">
                    <i class="fas fa-crown" style="margin-right: 12px; color: #ffd700;"></i>
                    Create Permanent Invite
                </h2>
            </div>

            <div style="padding: 32px;">
                <div style="text-align: left; margin-bottom: 24px;">
                    <label for="customCode" style="
                        color: #dcddde;
                        font-weight: 500;
                        font-size: 13px;
                        margin-bottom: 6px;
                        display: block;
                    "><b>Custom Code</b></label>
                    <input type="text" 
                           placeholder="Enter custom invite code" 
                           id="customCode" 
                           name="customCode" 
                           required
                           maxlength="20"
                           style="
                               width: 100%;
                               padding: 14px 16px;
                               background: rgba(32, 34, 37, 0.8);
                               border: 1px solid rgba(114, 118, 125, 0.4);
                               border-radius: 8px;
                               color: #dcddde;
                               font-size: 14px;
                               font-weight: 400;
                               transition: all 0.3s ease;
                               box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
                               backdrop-filter: blur(10px);
                               box-sizing: border-box;
                           "
                           onfocus="
                               this.style.borderColor='rgba(102, 122, 255, 0.6)';
                               this.style.boxShadow='inset 0 1px 3px rgba(0, 0, 0, 0.2), 0 0 0 3px rgba(102, 122, 255, 0.15)';
                           "
                           onblur="
                               this.style.borderColor='rgba(114, 118, 125, 0.4)';
                               this.style.boxShadow='inset 0 1px 3px rgba(0, 0, 0, 0.2)';
                           "
                           onkeypress="if(event.key === 'Enter') document.getElementById('createPermanentBtn').click()"
                    >
                    <div style="margin-top: 8px; font-size: 12px; color: #b9bbbe; opacity: 0.8;">
                        <i class="fas fa-info-circle" style="margin-right: 6px;"></i>
                        Permanent codes never expire and can be used multiple times
                    </div>
                </div>

                <div style="display: flex; justify-content: space-between; align-items: center; gap: 16px;">
                    <button type="button" 
                            id="createPermanentBtn"
                            style="
                                flex: 1;
                                background: linear-gradient(135deg, #667aff, #7386ff);
                                color: white;
                                padding: 16px 24px;
                                border: none;
                                border-radius: 8px;
                                cursor: pointer;
                                font-size: 14px;
                                font-weight: 600;
                                transition: all 0.3s ease;
                                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
                            "
                            onmouseover="
                                this.style.background='linear-gradient(135deg, #5865f2, #6b73ff)';
                                this.style.transform='translateY(-2px)';
                                this.style.boxShadow='0 6px 20px rgba(0, 0, 0, 0.2)';
                            "
                            onmouseout="
                                this.style.background='linear-gradient(135deg, #667aff, #7386ff)';
                                this.style.transform='translateY(0)';
                                this.style.boxShadow='0 4px 12px rgba(0, 0, 0, 0.15)';
                            ">
                        <i class="fas fa-crown" style="margin-right: 8px;"></i>
                        Create Permanent Code
                    </button>
                    <button type="button" 
                            onclick="document.getElementById('permanentInviteModal').style.display='none'"
                            style="
                                background: rgba(218, 86, 79, 0.1);
                                color: rgba(218, 86, 79, 0.9);
                                padding: 16px 24px;
                                border: 1px solid rgba(218, 86, 79, 0.3);
                                border-radius: 8px;
                                cursor: pointer;
                                font-size: 12px;
                                font-weight: 400;
                                transition: all 0.2s ease;
                            "
                            onmouseover="
                                this.style.background='rgba(218, 86, 79, 0.15)';
                                this.style.borderColor='rgba(218, 86, 79, 0.5)';
                            "
                            onmouseout="
                                this.style.background='rgba(218, 86, 79, 0.1)';
                                this.style.borderColor='rgba(218, 86, 79, 0.3)';
                            ">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div id="landingPage">
        <!-- Dither effect container - positioned below header -->
        <div id="dither-background" style="position: fixed; top: 100px; left: 0; width: 100%; height: calc(100% - 100px); z-index: -100; pointer-events: none;"></div>
    </div>

    <!-- Game Interface Container (initially hidden) -->
    <div id="gameDiv" style="display: none; width: 100%; max-width: 1200px; margin: 20px auto;">
        <!-- Game Interface -->
        <div id="experimentContainer" style="width: 100%; background-color: #36393f; padding: 20px; border-radius: 10px; box-sizing: border-box;">

            <!-- Experiment Status Panel -->
            <div id="statusPanel" style="display: flex; gap: 20px; margin-bottom: 20px;">
                <div class="status-card" style="background-color: #40444b; padding: 15px; border-radius: 5px; flex: 1; text-align: center;">
                    <h3 style="color: #ffffff; margin: 0; font-size: 18px;">Round</h3>
                    <span id="currentRound" style="color: #7289da; font-size: 24px; font-weight: bold;">0</span>
                    <span style="color: #b9bbbe;"> / </span>
                    <span id="maxRounds" style="color: #b9bbbe; font-size: 18px;">500</span>
                </div>
                <div class="status-card" style="background-color: #40444b; padding: 15px; border-radius: 5px; flex: 1; text-align: center;">
                    <h3 style="color: #ffffff; margin: 0; font-size: 18px;">White Tokens</h3>
                    <span id="whiteTokens" style="color: #43b581; font-size: 24px; font-weight: bold;">0</span>
                </div>
                <div class="status-card" style="background-color: #40444b; padding: 15px; border-radius: 5px; flex: 1; text-align: center;">
                    <h3 style="color: #ffffff; margin: 0; font-size: 18px;">Black Tokens</h3>
                    <span id="blackTokens" style="color: #f04747; font-size: 24px; font-weight: bold;">0</span>
                </div>
                <div class="status-card" style="background-color: #40444b; padding: 15px; border-radius: 5px; flex: 1; text-align: center;">
                    <h3 style="color: #ffffff; margin: 0; font-size: 18px;">Earnings</h3>
                    <span id="totalEarnings" style="color: #faa61a; font-size: 24px; font-weight: bold;">$0.00</span>
                </div>
            </div>

            <!-- Token Pool Status -->
            <div id="tokenPoolStatus" style="background-color: #40444b; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
                <!-- White Token Pool Visual -->
                <div style="text-align: center; margin-bottom: 10px;">
                    <span style="color: #ffffff; margin-right: 10px;">Global White Token Pool:</span>
                    <span id="globalTokenPool" style="color: #faa61a; font-size: 18px; font-weight: bold;">--</span>
                    <span id="tokenPoolMax" style="color: #b9bbbe; margin-left: 5px;">/--</span>
                </div>
                
                <!-- Token Pool Progress Bar -->
                <div style="background-color: #2c2f33; border-radius: 10px; height: 12px; margin: 8px 0; overflow: hidden; position: relative;">
                    <div id="tokenPoolBar" style="background: linear-gradient(90deg, #faa61a 0%, #ffcc4d 50%, #f1c40f 100%); height: 100%; width: 100%; transition: width 0.8s ease-in-out; border-radius: 10px; position: relative;">
                        <!-- Pool Drain Animation -->
                        <div style="position: absolute; right: 0; top: 0; height: 100%; width: 3px; background-color: rgba(255,255,255,0.3); animation: poolDrain 2s infinite;"></div>
                    </div>
                </div>
                
                <!-- Cooperation Counter -->
                <div style="text-align: center; margin-top: 10px;">
                    <span style="color: #b9bbbe; margin-right: 10px;">Cooperation Events:</span>
                    <span id="culturantCount" style="color: #7289da; font-size: 16px; font-weight: bold;">0</span>
                </div>
            </div>

            <!-- Poker Table Container -->
            <div id="pokerTable" style="position: relative; width: 100%; height: 400px; background-color: #2c2f33; border-radius: 10px; margin-bottom: 20px;">
                
                <div id="leftPlayer" class="poker-seat" style="position: absolute; left: 20px; top: 50%; transform: translateY(-50%); width: 120px; height: 80px; background-color: #36393f; border: 2px solid #7289da; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center;">
                    <div class="player-name" style="color: #ffffff; font-size: 16px; font-weight: bold;"></div>
                    <div class="player-status" style="color: #b9bbbe; font-size: 14px;"></div>
                    <div class="ai-indicator" style="color: #faa61a; font-size: 12px; display: none;">🤖 AI</div>
                    <div class="player-wallet" style="color: #43b581; font-size: 12px; margin-top: 2px;"></div>
                </div>
                
                <div id="topPlayer" class="poker-seat" style="position: absolute; top: 20px; left: 50%; transform: translateX(-50%); width: 120px; height: 80px; background-color: #36393f; border: 2px solid #7289da; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center;">
                    <div class="player-name" style="color: #ffffff; font-size: 16px; font-weight: bold;"></div>
                    <div class="player-status" style="color: #b9bbbe; font-size: 14px;"></div>
                    <div class="ai-indicator" style="color: #faa61a; font-size: 12px; display: none;">🤖 AI</div>
                    <div class="player-wallet" style="color: #43b581; font-size: 12px; margin-top: 2px;"></div>
                </div>
                
                <div id="rightPlayer" class="poker-seat" style="position: absolute; right: 20px; top: 50%; transform: translateY(-50%); width: 120px; height: 80px; background-color: #36393f; border: 2px solid #7289da; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center;">
                    <div class="player-name" style="color: #ffffff; font-size: 16px; font-weight: bold;"></div>
                    <div class="player-status" style="color: #b9bbbe; font-size: 14px;"></div>
                    <div class="ai-indicator" style="color: #faa61a; font-size: 12px; display: none;">🤖 AI</div>
                    <div class="player-wallet" style="color: #43b581; font-size: 12px; margin-top: 2px;"></div>
                </div>
                
                <!-- Moderator Position -->
                <div id="moderatorPosition" class="moderator-seat" style="position: absolute; bottom: 20px; left: 50%; transform: translateX(-50%); width: 120px; height: 70px; background-color: #2c2f33; border: 2px solid #9b59b6; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center;">
                    <div class="moderator-name" style="color: #9b59b6; font-size: 13px; font-weight: bold;">Waiting for Moderator...</div>
                    <div style="color: #9b59b6; font-size: 12px; font-weight: bold;">Moderator</div>
                    <div style="color: #b9bbbe; font-size: 9px;">Game Host</div>
                </div>
                
                <!-- Table Center -->
                <div id="tableCenter" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 100px; height: 60px; background-color: #2c2f33; border: 2px solid #72767d; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center;">
                    <div style="color: #ffffff; font-size: 12px; font-weight: bold;">Round</div>
                    <div id="tableRound" style="color: #7289da; font-size: 16px;">0</div>
                </div>
            </div>

            <!-- Main Game Area -->
            <div id="gameArea" style="background-color: #40444b; padding: 20px; border-radius: 5px; margin-bottom: 20px; min-height: 400px;">
                
                <!-- Lobby Phase -->
                <div id="lobbyPhase" style="text-align: center; padding: 50px;">
                    <h2 style="color: #ffffff; margin-bottom: 20px;">Waiting for Triad Formation</h2>
                    <p style="color: #b9bbbe; font-size: 18px; margin-bottom: 30px;">Moderator ready - need 3 more players to begin the experiment</p>
                    <div id="playerList" style="color: #7289da; font-size: 16px;"></div>
                    
                    <!-- Experiment Mode Selection -->
                    <div id="experimentModeSelector" style="display: none; margin: 20px 0;">
                        <label for="experimentMode" style="color: #ffffff; font-size: 16px; margin-right: 10px;">Experiment Mode:</label>
                        <select id="experimentMode" style="padding: 8px 12px; font-size: 16px; border-radius: 5px; border: 1px solid #7289da; background-color: #2f3136; color: #ffffff;">
                            <option value="baseline">Baseline (100 tokens, max 500 rounds)</option>
                            <option value="conditions">Conditions (2500 tokens, 441 rounds)</option>
                        </select>
                    </div>
                    
                    <button id="startExperimentBtn" style="display: none; background-color: #43b581; color: white; padding: 15px 30px; font-size: 18px; border: none; border-radius: 5px; cursor: pointer; margin-top: 20px;">
                        Start Experiment
                    </button>
                </div>

                <!-- Decision Grid Phase -->
                <div id="decisionPhase" style="display: none; text-align: center;">
                    <!-- Decision Grid and Results Container -->
                    <div id="decisionGridContainer" style="display: flex; gap: 30px; margin: 30px auto; justify-content: center; align-items: flex-start; flex-wrap: wrap;">
                        
                        <!-- Left Side: Round Results Panel -->
                        <div style="flex: 0 0 auto; min-width: 300px; max-width: 350px; align-self: flex-start;">
                            
                            <!-- Lock In Section - positioned above Round Results -->
                            <div id="selectionSection" style="display: none; margin-bottom: 20px;">
                                <div style="background: rgba(54, 57, 63, 0.8); backdrop-filter: blur(12px); border-radius: 8px; padding: 14px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2); border: 1px solid rgba(114, 118, 125, 0.2); width: 100%;">
                                    <div style="display: flex; align-items: center; justify-content: center; gap: 6px; margin-bottom: 10px;">
                                        <div style="width: 4px; height: 4px; background-color: #7289da; border-radius: 50%; animation: subtlePulse 2s infinite;"></div>
                                        <div id="selectedChoice" style="color: #dcddde; font-size: 13px; font-weight: 500;">No selection made</div>
                                        <div style="width: 4px; height: 4px; background-color: #7289da; border-radius: 50%; animation: subtlePulse 2s infinite;"></div>
                                    </div>
                                    
                                    <button id="lockInBtn" style="
                                        background: linear-gradient(135deg, #5865f2, #4752c4);
                                        color: white;
                                        padding: 8px 16px;
                                        font-size: 12px;
                                        font-weight: 500;
                                        border: none;
                                        border-radius: 6px;
                                        cursor: pointer;
                                        position: relative;
                                        overflow: hidden;
                                        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
                                        box-shadow: 0 2px 6px rgba(88, 101, 242, 0.25);
                                        letter-spacing: 0.3px;
                                        width: 100%;
                                    " disabled onmouseover="
                                        if (!this.disabled) {
                                            this.style.transform = 'translateY(-1px)';
                                            this.style.boxShadow = '0 4px 12px rgba(88, 101, 242, 0.35)';
                                        }
                                    " onmouseout="
                                        if (!this.disabled) {
                                            this.style.transform = 'translateY(0)';
                                            this.style.boxShadow = '0 2px 6px rgba(88, 101, 242, 0.25)';
                                        }
                                    ">
                                        <span id="lockInText" style="position: relative; z-index: 1;">🔒 Lock In Choice</span>
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Token Conversion Rate Display -->
                            <div id="tokenConversionDisplay" style="display: none; margin-bottom: 15px;">
                                <div style="background: rgba(54, 57, 63, 0.9); backdrop-filter: blur(12px); border-radius: 6px; padding: 12px; box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15); border: 1px solid rgba(114, 118, 125, 0.3);">
                                    <div style="color: #faa61a; font-size: 12px; font-weight: 600; margin-bottom: 8px; text-align: center; opacity: 0.8;">Current Token Values</div>
                                    <div style="display: flex; align-items: center; justify-content: space-around; gap: 12px;">
                                        <div style="display: flex; align-items: center; gap: 6px;">
                                            <span style="font-size: 14px;">⚪</span>
                                            <span id="whiteTokenValue" style="color: #ffffff; font-size: 13px; font-weight: 500;">$0.01</span>
                                        </div>
                                        <div style="display: flex; align-items: center; gap: 6px;">
                                            <span style="font-size: 14px;">⚫</span>
                                            <span id="blackTokenValue" style="color: #ffffff; font-size: 13px; font-weight: 500;">$0.05</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Round Results Phase -->
                            <div id="resultsPhase" style="display: block; width: 100%;">
                                <div style="background: rgba(64, 68, 75, 0.8); backdrop-filter: blur(12px); border-radius: 8px; padding: 16px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2); border: 1px solid rgba(114, 118, 125, 0.2); height: 480px; overflow-y: auto;">
                                    <h4 id="roundResultsTitle" style="color: #ffffff; margin: 0 0 12px 0; font-size: 16px;">Experiment Ready</h4>
                                    <div id="roundResults" style="color: #b9bbbe; margin-bottom: 12px; font-size: 14px;">Waiting for first round to begin...</div>
                                    <div id="tokenUpdate" style="color: #43b581; font-size: 15px; margin-bottom: 8px; font-weight: 500;"></div>
                                    <div id="roundEarnings" style="color: #43b581; font-size: 14px; margin-bottom: 10px; font-weight: 500;"></div>
                                    <div id="culturantStatus" style="color: #7289da; font-size: 13px;"></div>
                                    <div id="activeIncentive" style="color: #faa61a; font-size: 12px; margin-top: 8px;"></div>
                                    <div id="baselineExitNotification" style="display: none; background: linear-gradient(135deg, #43b581, #5bc0de); color: #ffffff; font-size: 12px; font-weight: 600; margin-top: 8px; padding: 8px 12px; border-radius: 6px; cursor: pointer; box-shadow: 0 2px 8px rgba(67, 181, 129, 0.3); border: 1px solid rgba(255, 255, 255, 0.2); transition: all 0.3s ease;" onclick="this.style.display='none';" onmouseover="this.style.transform='scale(1.02)'; this.style.boxShadow='0 4px 16px rgba(67, 181, 129, 0.5)';" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='0 2px 8px rgba(67, 181, 129, 0.3)';">
                                        <div style="display: flex; align-items: center; gap: 8px;">
                                            <span style="font-size: 16px;">🎯</span>
                                            <span id="baselineExitText">Baseline condition exited on turn X</span>
                                            <span style="font-size: 11px; opacity: 0.8; margin-left: auto;">(click to dismiss)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Right Side: 8x8 Decision Grid -->
                        <div id="decisionGrid" style="flex: 0 0 auto;">                        
                            <!-- Grid container with row headers and cells -->
                            <div style="display: flex;">
                                <!-- Row headers (numbers 1-8) -->
                                <div style="display: flex; flex-direction: column;">
                                    <div style="height: 38px; margin-bottom: 10px;"></div> <!-- Spacer to align with column headers -->
                                    <div class="row-header" data-row="1" style="width: 80px; height: 50px; display: flex; align-items: center; justify-content: center; color: #ffffff; font-weight: bold; font-size: 14px; margin: 0; padding: 0; transition: all 0.3s ease;">1</div>
                                    <div class="row-header" data-row="2" style="width: 80px; height: 50px; display: flex; align-items: center; justify-content: center; color: #000000; font-weight: bold; font-size: 14px; margin: 0; padding: 0; transition: all 0.3s ease;">2</div>
                                    <div class="row-header" data-row="3" style="width: 80px; height: 50px; display: flex; align-items: center; justify-content: center; color: #ffffff; font-weight: bold; font-size: 14px; margin: 0; padding: 0; transition: all 0.3s ease;">3</div>
                                    <div class="row-header" data-row="4" style="width: 80px; height: 50px; display: flex; align-items: center; justify-content: center; color: #000000; font-weight: bold; font-size: 14px; margin: 0; padding: 0; transition: all 0.3s ease;">4</div>
                                    <div class="row-header" data-row="5" style="width: 80px; height: 50px; display: flex; align-items: center; justify-content: center; color: #ffffff; font-weight: bold; font-size: 14px; margin: 0; padding: 0; transition: all 0.3s ease;">5</div>
                                    <div class="row-header" data-row="6" style="width: 80px; height: 50px; display: flex; align-items: center; justify-content: center; color: #000000; font-weight: bold; font-size: 14px; margin: 0; padding: 0; transition: all 0.3s ease;">6</div>
                                    <div class="row-header" data-row="7" style="width: 80px; height: 50px; display: flex; align-items: center; justify-content: center; color: #ffffff; font-weight: bold; font-size: 14px; margin: 0; padding: 0; transition: all 0.3s ease;">7</div>
                                    <div class="row-header" data-row="8" style="width: 80px; height: 50px; display: flex; align-items: center; justify-content: center; color: #000000; font-weight: bold; font-size: 14px; margin: 0; padding: 0; transition: all 0.3s ease;">8</div>
                                </div>
                                
                                <!-- The actual grid -->
                                <div style="display: flex; flex-direction: column;">
                                    <!-- Column Headers -->
                                    <div class="grid-header" style="display: flex; margin-bottom: 10px; width: 400px;">
                                        <div class="column-header" data-column="A" style="width: 50px; text-align: center; color: #faa61a; font-weight: bold; font-size: 14px; cursor: pointer; padding: 8px 0; border-radius: 4px; transition: all 0.3s ease;">A</div>
                                        <div class="column-header" data-column="B" style="width: 50px; text-align: center; color: #faa61a; font-weight: bold; font-size: 14px; cursor: pointer; padding: 8px 0; border-radius: 4px; transition: all 0.3s ease;">B</div>
                                        <div class="column-header" data-column="C" style="width: 50px; text-align: center; color: #faa61a; font-weight: bold; font-size: 14px; cursor: pointer; padding: 8px 0; border-radius: 4px; transition: all 0.3s ease;">C</div>
                                        <div class="column-header" data-column="D" style="width: 50px; text-align: center; color: #faa61a; font-weight: bold; font-size: 14px; cursor: pointer; padding: 8px 0; border-radius: 4px; transition: all 0.3s ease;">D</div>
                                        <div class="column-header" data-column="E" style="width: 50px; text-align: center; color: #faa61a; font-weight: bold; font-size: 14px; cursor: pointer; padding: 8px 0; border-radius: 4px; transition: all 0.3s ease;">E</div>
                                        <div class="column-header" data-column="F" style="width: 50px; text-align: center; color: #faa61a; font-weight: bold; font-size: 14px; cursor: pointer; padding: 8px 0; border-radius: 4px; transition: all 0.3s ease;">F</div>
                                        <div class="column-header" data-column="G" style="width: 50px; text-align: center; color: #faa61a; font-weight: bold; font-size: 14px; cursor: pointer; padding: 8px 0; border-radius: 4px; transition: all 0.3s ease;">G</div>
                                        <div class="column-header" data-column="H" style="width: 50px; text-align: center; color: #faa61a; font-weight: bold; font-size: 14px; cursor: pointer; padding: 8px 0; border-radius: 4px; transition: all 0.3s ease;">H</div>
                                    </div>
                                    
                                    <!-- 8x8 Grid with clickable rows -->
                                    <div id="grid8x8" style="border: 2px solid #72767d; background-color: #2c2f33; width: 400px; box-sizing: border-box;">
                                        <!-- Grid will be populated dynamically by JavaScript -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                        
                        <style>
                            .clickable-row:hover .grid-cell-8x8 {
                                background-color: rgba(255, 215, 0, 0.3) !important;
                                border-color: #ffd700 !important;
                                color: #000000 !important;
                                box-shadow: 0 0 5px rgba(255, 215, 0, 0.5) !important;
                            }
                            .clickable-row:hover .row-label {
                                filter: brightness(1.3) !important;
                                border-color: #ffd700 !important;
                            }
                            
                            .clickable-column:hover {
                                background-color: rgba(114, 137, 218, 0.3) !important;
                                border-color: #7289da !important;
                                transform: scale(1.05) !important;
                                box-shadow: 0 0 10px rgba(114, 137, 218, 0.4) !important;
                            }
                            .column-header:hover {
                                background-color: rgba(114, 137, 218, 0.3) !important;
                                transform: scale(1.1) !important;
                            }
                            .column-header.selected {
                                background-color: #7289da !important;
                                color: #ffffff !important;
                                transform: scale(1.1) !important;
                                box-shadow: 0 0 8px rgba(114, 137, 218, 0.6) !important;
                            }
                            .column-selected .grid-cell-8x8 {
                                border-color: #7289da !important;
                                box-shadow: inset 0 0 3px rgba(114, 137, 218, 0.3) !important;
                            }
                        </style>
                        
                        <!-- Unified Moderator Switchboard Control (only visible to moderator) -->
                        <div id="moderatorSwitchboard" style="display: none; margin: 20px auto 0 auto; padding: 0; width: 1200px; box-sizing: border-box;">
                            <!-- Switchboard Header -->
                            <div class="switchboard-header">
                                <div class="header-lights">
                                    <div class="status-light power-light"></div>
                                    <div class="status-light experiment-light"></div>
                                    <div class="status-light testing-light"></div>
                                </div>
                                <h3 class="switchboard-title">MODERATOR CONTROL PANEL</h3>
                                <div class="header-display">
                                    <span id="switchboardClock"></span>
                                </div>
                            </div>
                            
                            <!-- Main Control Grid -->
                            <div class="switchboard-grid">
                                <!-- Left Column: Game Controls -->
                                <div class="control-column left-column">
                                    <div class="section-header">
                                        <span class="section-icon">🎮</span>
                                        <span class="section-title">GAME CONTROLS</span>
                                    </div>
                                    
                                    <!-- Column Selection -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            Column Selection 
                                            <button class="info-btn mini" data-info="column-selection" title="How column selection works">i</button>
                                        </div>
                                        <div class="toggle-switch-container">
                                            <label class="toggle-switch">
                                                <input type="checkbox" id="autoColumnToggleSwitch" checked>
                                                <span class="slider round"></span>
                                                <span class="toggle-label">AUTO MODE</span>
                                            </label>
                                        </div>
                                        <div id="manualColumnGrid" class="manual-controls" style="display: none;">
                                            <div class="column-buttons">
                                                <button class="switchboard-btn column-btn" data-column="A">A</button>
                                                <button class="switchboard-btn column-btn" data-column="B">B</button>
                                                <button class="switchboard-btn column-btn" data-column="C">C</button>
                                                <button class="switchboard-btn column-btn" data-column="D">D</button>
                                                <button class="switchboard-btn column-btn" data-column="E">E</button>
                                                <button class="switchboard-btn column-btn" data-column="F">F</button>
                                                <button class="switchboard-btn column-btn" data-column="G">G</button>
                                                <button class="switchboard-btn column-btn" data-column="H">H</button>
                                            </div>
                                            <div id="selectedColumnIndicator" class="status-indicator">AUTO MODE</div>
                                        </div>
                                    </div>
                                    
                                    <!-- System Controls -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            System Control 
                                            <button class="info-btn mini" data-info="system-controls" title="Pause, resume, reset and end experiment">i</button>
                                        </div>
                                        <div class="system-control-buttons">
                                            <button id="pauseExperimentBtnSwitch" onclick="pauseExperiment()" class="switchboard-btn pause-btn">⏸️ PAUSE</button>
                                            <button id="resumeExperimentBtnSwitch" onclick="resumeExperiment()" class="switchboard-btn resume-btn" style="display: none;">▶️ RESUME</button>
                                            <button onclick="resetExperiment()" class="switchboard-btn reset-btn">🔄 RESET</button>
                                            <button id="endExperimentSwitch" class="switchboard-btn critical-btn">END EXPERIMENT</button>
                                        </div>
                                    </div>
                                    
                                    <!-- Token Pool Control -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            Token Pool Management 
                                            <button class="info-btn mini" data-info="token-pool" title="Adjust token pool to control experiment pacing">i</button>
                                        </div>
                                        <div class="input-control-row">
                                            <input type="number" id="fastForwardTokensSwitch" placeholder="Enter tokens (0-2500)" min="0" max="2500" class="switchboard-input token-input">
                                            <button id="applyFastForwardSwitch" class="switchboard-btn action-btn">SET TOKENS</button>
                                        </div>
                                        <div class="quick-token-buttons">
                                            <button id="setLowTokensSwitch" class="switchboard-btn danger-btn">50 TOKENS</button>
                                            <button id="setMidTokensSwitch" class="switchboard-btn warning-btn">500 TOKENS</button>
                                            <button id="setHighTokensSwitch" class="switchboard-btn safe-btn">1500 TOKENS</button>
                                        </div>
                                        <div id="experimentStatusSwitch" class="status-display">
                                            Token pool status will appear here
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Center Column: Experiment Controls -->
                                <div class="control-column center-column">
                                    <div class="section-header">
                                        <span class="section-icon">⚗️</span>
                                        <span class="section-title">EXPERIMENT CONTROLS</span>
                                    </div>
                                    
                                    <!-- Current Experiment Status - Fixed Phase Info Panel -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            Current Experiment Status 
                                            <button class="info-btn mini" data-info="experiment-status" title="Current phase, condition, and round information">i</button>
                                        </div>
                                        <div id="experimentStatusDisplay" class="status-display-panel">
                                            <div class="status-row">
                                                <span class="status-label">Phase:</span>
                                                <span id="currentPhaseDisplay" class="status-value">Baseline</span>
                                            </div>
                                            <div class="status-row">
                                                <span class="status-label">Condition:</span>
                                                <span id="currentConditionDisplay" class="status-value">Baseline</span>
                                            </div>
                                            <div class="status-row">
                                                <span class="status-label">Round:</span>
                                                <span id="currentRoundDisplay" class="status-value">0/21</span>
                                            </div>
                                            <div class="status-row">
                                                <span class="status-label">Incentive Player:</span>
                                                <span id="currentIncentivePlayerDisplay" class="status-value">None</span>
                                            </div>
                                            <div class="status-row">
                                                <span class="status-label">Block:</span>
                                                <span id="currentBlockDisplay" class="status-value">N/A</span>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Condition Tracker LED Array -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            Condition Tracker 
                                            <button class="info-btn mini" data-info="condition-tracker" title="Quality control tracker - each condition should occur exactly once per round position within each block. Red LEDs indicate scheduling errors.">i</button>
                                        </div>
                                        <div id="conditionLEDArray" class="led-array-container">
                                            <div class="led-array-header">
                                                <div class="led-legend">
                                                    <span class="led-legend-item">
                                                        <span class="led-indicator green"></span> Normal occurrence
                                                    </span>
                                                    <span class="led-legend-item">
                                                        <span class="led-indicator red"></span> ERROR - Duplicate!
                                                    </span>
                                                    <span class="led-legend-item">
                                                        <span class="led-indicator off"></span> Not yet occurred
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="led-grid">
                                                <!-- High Culturant Condition (7 LEDs) -->
                                                <div class="led-condition-group">
                                                    <div class="led-group-label">High Culturant</div>
                                                    <div class="led-row">
                                                        <span class="led-item" data-condition="HIGH_CULTURANT" data-round="1" title="High Culturant - Round 1">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">1</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_CULTURANT" data-round="2" title="High Culturant - Round 2">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">2</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_CULTURANT" data-round="3" title="High Culturant - Round 3">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">3</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_CULTURANT" data-round="4" title="High Culturant - Round 4">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">4</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_CULTURANT" data-round="5" title="High Culturant - Round 5">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">5</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_CULTURANT" data-round="6" title="High Culturant - Round 6">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">6</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_CULTURANT" data-round="7" title="High Culturant - Round 7">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">7</span>
                                                        </span>
                                                    </div>
                                                    <div class="player-counter-row">
                                                        <span class="player-counter" data-player="None" data-condition="HIGH_CULTURANT" title="Rounds with no player incentive">None:<span class="count">0</span></span>
                                                        <span class="player-counter dynamic-player" data-condition="HIGH_CULTURANT" title="Player A assignments will appear here" style="display: none;"></span>
                                                        <span class="player-counter dynamic-player" data-condition="HIGH_CULTURANT" title="Player B assignments will appear here" style="display: none;"></span>
                                                        <span class="player-counter dynamic-player" data-condition="HIGH_CULTURANT" title="Player C assignments will appear here" style="display: none;"></span>
                                                    </div>
                                                </div>
                                                
                                                <!-- High Operant Condition (7 LEDs) -->
                                                <div class="led-condition-group">
                                                    <div class="led-group-label">High Operant</div>
                                                    <div class="led-row">
                                                        <span class="led-item" data-condition="HIGH_OPERANT" data-round="1" title="High Operant - Round 1">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">1</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_OPERANT" data-round="2" title="High Operant - Round 2">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">2</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_OPERANT" data-round="3" title="High Operant - Round 3">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">3</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_OPERANT" data-round="4" title="High Operant - Round 4">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">4</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_OPERANT" data-round="5" title="High Operant - Round 5">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">5</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_OPERANT" data-round="6" title="High Operant - Round 6">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">6</span>
                                                        </span>
                                                        <span class="led-item" data-condition="HIGH_OPERANT" data-round="7" title="High Operant - Round 7">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">7</span>
                                                        </span>
                                                    </div>
                                                    <div class="player-counter-row">
                                                        <span class="player-counter" data-player="None" data-condition="HIGH_OPERANT" title="Rounds with no player incentive">None:<span class="count">0</span></span>
                                                        <span class="player-counter dynamic-player" data-condition="HIGH_OPERANT" title="Player A assignments will appear here" style="display: none;"></span>
                                                        <span class="player-counter dynamic-player" data-condition="HIGH_OPERANT" title="Player B assignments will appear here" style="display: none;"></span>
                                                        <span class="player-counter dynamic-player" data-condition="HIGH_OPERANT" title="Player C assignments will appear here" style="display: none;"></span>
                                                    </div>
                                                </div>
                                                
                                                <!-- Equal Culturant-Operant Condition (7 LEDs) -->
                                                <div class="led-condition-group">
                                                    <div class="led-group-label">Equal C-O</div>
                                                    <div class="led-row">
                                                        <span class="led-item" data-condition="EQUAL_CULTURANT_OPERANT" data-round="1" title="Equal Culturant-Operant - Round 1">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">1</span>
                                                        </span>
                                                        <span class="led-item" data-condition="EQUAL_CULTURANT_OPERANT" data-round="2" title="Equal Culturant-Operant - Round 2">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">2</span>
                                                        </span>
                                                        <span class="led-item" data-condition="EQUAL_CULTURANT_OPERANT" data-round="3" title="Equal Culturant-Operant - Round 3">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">3</span>
                                                        </span>
                                                        <span class="led-item" data-condition="EQUAL_CULTURANT_OPERANT" data-round="4" title="Equal Culturant-Operant - Round 4">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">4</span>
                                                        </span>
                                                        <span class="led-item" data-condition="EQUAL_CULTURANT_OPERANT" data-round="5" title="Equal Culturant-Operant - Round 5">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">5</span>
                                                        </span>
                                                        <span class="led-item" data-condition="EQUAL_CULTURANT_OPERANT" data-round="6" title="Equal Culturant-Operant - Round 6">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">6</span>
                                                        </span>
                                                        <span class="led-item" data-condition="EQUAL_CULTURANT_OPERANT" data-round="7" title="Equal Culturant-Operant - Round 7">
                                                            <span class="led-indicator off"></span>
                                                            <span class="led-label">7</span>
                                                        </span>
                                                    </div>
                                                    <div class="player-counter-row">
                                                        <span class="player-counter" data-player="None" data-condition="EQUAL_CULTURANT_OPERANT" title="Rounds with no player incentive">None:<span class="count">0</span></span>
                                                        <span class="player-counter dynamic-player" data-condition="EQUAL_CULTURANT_OPERANT" title="Player A assignments will appear here" style="display: none;"></span>
                                                        <span class="player-counter dynamic-player" data-condition="EQUAL_CULTURANT_OPERANT" title="Player B assignments will appear here" style="display: none;"></span>
                                                        <span class="player-counter dynamic-player" data-condition="EQUAL_CULTURANT_OPERANT" title="Player C assignments will appear here" style="display: none;"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Experimental Condition -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            Experimental Condition 
                                            <button class="info-btn mini" data-info="conditions" title="Payment structure conditions">i</button>
                                        </div>
                                        <select id="experimentalConditionSwitch" class="switchboard-select">
                                            <option value="BASELINE">Baseline ($0.01/$0.05)</option>
                                            <option value="HIGH_CULTURANT">High Culturant ($0.02/$0.07)</option>
                                            <option value="HIGH_OPERANT">High Operant ($0.03/$0.04)</option>
                                            <option value="EQUAL_CULTURANT_OPERANT">Equal C-O ($0.01/$0.02)</option>
                                        </select>
                                        <button onclick="setCondition()" class="switchboard-btn apply-btn">APPLY CONDITION</button>
                                        <div id="conditionStatusSwitch" class="status-indicator">Current: Baseline</div>
                                    </div>
                                    
                                    <!-- Player Incentives -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            Player Incentives 
                                            <button class="info-btn mini" data-info="incentives" title="Set bonus conditions for specific players">i</button>
                                        </div>
                                        <div class="incentive-controls">
                                            <select id="incentivePlayerSwitch" class="switchboard-select">
                                                <option value="">Select Player...</option>
                                            </select>
                                            <select id="incentiveTypeSwitch" class="switchboard-select">
                                                <option value="">No Incentive</option>
                                                <option value="Operant Incentive">Operant Incentive: Choose Odd Rows (1,3,5,7)</option>
                                                <option value="Culturant Incentive">Culturant Incentive: Choose Even Rows (2,4,6,8)</option>
                                            </select>
                                            <button onclick="setPlayerIncentive()" class="switchboard-btn incentive-btn">SET INCENTIVE</button>
                                        </div>
                                        <div id="incentiveStatusSwitch" class="status-indicator">No active incentives</div>
                                    </div>
                                </div>
                                
                                <!-- Right Column: System & Debug -->
                                <div class="control-column right-column">
                                    <div class="section-header">
                                        <span class="section-icon">�</span>
                                        <span class="section-title">SYSTEM & DEBUG</span>
                                    </div>
                                    
                                    <!-- AI Behavior Control -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            AI Behavior 
                                            <button class="info-btn mini" data-info="ai-behavior" title="Control AI decision patterns">i</button>
                                        </div>
                                        <select id="aiBehaviorModeSwitch" class="switchboard-select">
                                            <option value="random">Random (Default)</option>
                                            <option value="all_impulsive">Force All AI → Odd Rows</option>
                                            <option value="all_selfcontrol">Force All AI → Even Rows</option>
                                            <option value="mixed">Force Mixed Pattern</option>
                                            <option value="specific_row">Force Specific Row</option>
                                        </select>
                                        <input type="number" id="specificRowNumberSwitch" min="1" max="8" placeholder="Row (1-8)" class="switchboard-input specific-row" style="display: none;">
                                    </div>
                                    
                                    <!-- System Messages -->
                                    <div class="control-group">
                                        <div class="control-label">
                                            System Broadcast 
                                            <button class="info-btn mini" data-info="system-messages" title="Send messages to all players">i</button>
                                        </div>
                                        <div class="message-control-container">
                                            <textarea id="systemMessageTextSwitch" placeholder="Type message to broadcast to all players..." class="switchboard-textarea" rows="2"></textarea>
                                            <button onclick="sendSystemMessage()" class="switchboard-btn broadcast-btn">BROADCAST</button>
                                        </div>
                                        <div class="preset-messages">
                                            <button class="preset-msg-btn" data-msg="Experiment starting in 30 seconds">⚡ Start Warning</button>
                                            <button class="preset-msg-btn" data-msg="Please make your selections quickly">⏰ Speed Up</button>
                                            <button class="preset-msg-btn" data-msg="Take your time with this decision">🤔 Slow Down</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Info Tooltips -->
                            <div id="infoTooltip" class="info-tooltip" style="display: none;">
                                <div class="tooltip-content">
                                    <div class="tooltip-header">
                                        <span class="tooltip-title">Information</span>
                                        <button class="tooltip-close">×</button>
                                    </div>
                                    <div class="tooltip-body">
                                        <p id="tooltipText">Information will appear here</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Switchboard Styles -->
                        <style>
                        .switchboard-header {
                            background: linear-gradient(135deg, #1a1a2e 0%, #2d2d44 50%, #1a1a2e 100%);
                            border: 2px solid #00ffff;
                            border-radius: 8px 8px 0 0;
                            padding: 12px 20px;
                            display: flex;
                            align-items: center;
                            justify-content: space-between;
                            box-shadow: 
                                0 0 20px rgba(0, 255, 255, 0.3),
                                inset 0 1px 0 rgba(255, 255, 255, 0.1);
                        }
                        
                        .header-lights {
                            display: flex;
                            gap: 8px;
                        }
                        
                        .status-light {
                            width: 12px;
                            height: 12px;
                            border-radius: 50%;
                            border: 1px solid rgba(255, 255, 255, 0.3);
                            animation: lightPulse 2s ease-in-out infinite alternate;
                        }
                        
                        .power-light {
                            background: radial-gradient(circle, #00ff00, #004400);
                            box-shadow: 0 0 10px rgba(0, 255, 0, 0.6);
                        }
                        
                        .experiment-light {
                            background: radial-gradient(circle, #ffff00, #444400);
                            box-shadow: 0 0 10px rgba(255, 255, 0, 0.6);
                            animation-delay: 0.7s;
                        }
                        
                        .testing-light {
                            background: radial-gradient(circle, #ff6600, #442200);
                            box-shadow: 0 0 10px rgba(255, 102, 0, 0.6);
                            animation-delay: 1.4s;
                        }
                        
                        .switchboard-title {
                            color: #00ffff;
                            font-family: 'Orbitron', 'Courier New', monospace;
                            font-size: 18px;
                            font-weight: bold;
                            text-shadow: 0 0 10px rgba(0, 255, 255, 0.8);
                            letter-spacing: 2px;
                            margin: 0;
                        }
                        
                        .header-display {
                            background: rgba(0, 0, 0, 0.8);
                            border: 1px solid #00ffff;
                            padding: 4px 12px;
                            border-radius: 4px;
                            color: #00ff00;
                            font-family: 'Courier New', monospace;
                            font-size: 14px;
                        }
                        
                        .switchboard-grid {
                            background: linear-gradient(135deg, #2a2a3e 0%, #1e1e2e 50%, #2a2a3e 100%);
                            border: 2px solid #444;
                            border-top: none;
                            border-radius: 0 0 8px 8px;
                            padding: 20px;
                            display: grid;
                            grid-template-columns: 1fr 1.5fr 1fr;
                            gap: 15px;
                            box-shadow: 
                                0 4px 20px rgba(0, 0, 0, 0.5),
                                inset 0 0 30px rgba(0, 255, 255, 0.05);
                        }
                        
                        .control-column {
                            background: rgba(0, 0, 0, 0.3);
                            border: 1px solid rgba(255, 255, 255, 0.1);
                            border-radius: 6px;
                            padding: 18px;
                            min-height: 400px;
                        }
                        
                        .section-header {
                            display: flex;
                            align-items: center;
                            gap: 8px;
                            margin-bottom: 20px;
                            padding-bottom: 8px;
                            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
                            position: relative;
                        }
                        
                        .section-icon {
                            font-size: 20px;
                        }
                        
                        .section-title {
                            color: #00ffff;
                            font-family: 'Orbitron', 'Courier New', monospace;
                            font-size: 18px;
                            font-weight: bold;
                            letter-spacing: 1px;
                            flex: 1;
                        }
                        
                        .info-btn {
                            background: transparent;
                            border: 2px solid rgba(255, 255, 255, 0.6);
                            color: rgba(255, 255, 255, 0.8);
                            width: 18px;
                            height: 18px;
                            border-radius: 50%;
                            cursor: pointer;
                            font-size: 12px;
                            font-weight: bold;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            transition: all 0.2s ease;
                            font-family: Arial, sans-serif;
                            position: relative;
                        }
                        
                        .info-btn:hover {
                            background: rgba(255, 255, 255, 0.1);
                            color: #ffffff;
                            border-color: #ffffff;
                            box-shadow: 0 0 8px rgba(255, 255, 255, 0.3);
                            transform: scale(1.1);
                        }
                        
                        .info-btn.mini {
                            width: 16px;
                            height: 16px;
                            font-size: 11px;
                            margin-left: 8px;
                        }
                        
                        .control-group {
                            margin-bottom: 20px;
                            background: rgba(255, 255, 255, 0.02);
                            border: 1px solid rgba(255, 255, 255, 0.1);
                            border-radius: 4px;
                            padding: 12px;
                        }
                        
                        .control-label {
                            color: #ffffff;
                            font-size: 15px;
                            font-weight: bold;
                            margin-bottom: 10px;
                            text-transform: uppercase;
                            letter-spacing: 1px;
                            display: flex;
                            align-items: center;
                        }
                        
                        .toggle-switch-container {
                            margin-bottom: 10px;
                        }
                        
                        .toggle-switch {
                            position: relative;
                            display: flex;
                            align-items: center;
                            gap: 10px;
                            cursor: pointer;
                        }
                        
                        .toggle-switch input {
                            opacity: 0;
                            width: 0;
                            height: 0;
                        }
                        
                        .slider {
                            position: relative;
                            width: 50px;
                            height: 24px;
                            background: linear-gradient(135deg, #444, #222);
                            border: 2px solid #666;
                            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                        }
                        
                        .slider:before {
                            position: absolute;
                            content: "";
                            height: 16px;
                            width: 16px;
                            left: 2px;
                            top: 2px;
                            background: linear-gradient(135deg, #888, #555);
                            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
                        }
                        
                        input:checked + .slider {
                            background: linear-gradient(135deg, #00ff88, #0088ff);
                            border-color: #00ffff;
                            box-shadow: 0 0 20px rgba(0, 255, 255, 0.4);
                        }
                        
                        input:checked + .slider:before {
                            transform: translateX(26px);
                            background: linear-gradient(135deg, #ffffff, #dddddd);
                            box-shadow: 0 0 10px rgba(0, 255, 255, 0.8);
                        }
                        
                        .slider.round {
                            border-radius: 24px;
                        }
                        
                        .slider.round:before {
                            border-radius: 50%;
                        }
                        
                        .toggle-label {
                            color: #00ffff;
                            font-family: 'Courier New', monospace;
                            font-size: 14px;
                            font-weight: bold;
                        }
                        
                        .column-buttons {
                            display: grid;
                            grid-template-columns: repeat(4, 1fr);
                            gap: 4px;
                            margin-bottom: 8px;
                        }
                        
                        .switchboard-btn {
                            background: linear-gradient(135deg, #3a3a5c 0%, #2a2a4c 50%, #1a1a3c 100%);
                            border: 1px solid #555;
                            color: #ffffff;
                            padding: 10px 16px;
                            border-radius: 4px;
                            cursor: pointer;
                            font-family: 'Courier New', monospace;
                            font-size: 14px;
                            font-weight: bold;
                            transition: all 0.2s ease;
                            position: relative;
                            overflow: hidden;
                        }
                        
                        .switchboard-btn:hover {
                            border-color: #00ffff;
                            box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
                            transform: translateY(-1px);
                        }
                        
                        .switchboard-btn:active {
                            transform: translateY(1px);
                            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
                        }
                        
                        .switchboard-btn.active {
                            background: linear-gradient(135deg, #00ff88, #0088ff);
                            color: #000;
                            box-shadow: 0 0 20px rgba(0, 255, 255, 0.6);
                        }
                        
                        .column-btn {
                            min-width: 30px;
                            padding: 8px 4px;
                        }
                        
                        .action-btn { border-color: #00ff88; }
                        .warning-btn { border-color: #ffaa00; }
                        .danger-btn { border-color: #ff6600; }
                        .critical-btn { 
                            background-color: #ff0000; 
                            border-color: #ff0000; 
                            color: #ffffff; 
                        }
                        .apply-btn { border-color: #00ffff; }
                        .broadcast-btn { border-color: #8844ff; }
                        .pause-btn { 
                            background-color: #ffcc00; 
                            border-color: #ffaa00; 
                            color: #000000; 
                        }
                        .resume-btn { border-color: #44ff44; }
                        .reset-btn { border-color: #4488ff; }
                        .incentive-btn { border-color: #ffaa44; }
                        .safe-btn { border-color: #44ff44; }
                        
                        .switchboard-input {
                            background: rgba(0, 0, 0, 0.8);
                            border: 1px solid #444;
                            color: #00ff00;
                            padding: 10px 14px;
                            border-radius: 3px;
                            font-family: 'Courier New', monospace;
                            font-size: 15px;
                            width: 100%;
                            box-sizing: border-box;
                            margin-bottom: 8px;
                        }
                        
                        .switchboard-input:focus {
                            border-color: #00ffff;
                            box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
                            outline: none;
                        }
                        
                        .token-input {
                            font-size: 16px;
                            padding: 12px 16px;
                            font-weight: bold;
                            text-align: center;
                        }
                        
                        .switchboard-textarea {
                            background: rgba(0, 0, 0, 0.8);
                            border: 1px solid #444;
                            color: #00ff00;
                            padding: 10px;
                            border-radius: 3px;
                            font-family: 'Courier New', monospace;
                            font-size: 14px;
                            width: 100%;
                            box-sizing: border-box;
                            resize: vertical;
                            min-height: 60px;
                            margin-bottom: 8px;
                        }
                        
                        .switchboard-textarea:focus {
                            border-color: #00ffff;
                            box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
                            outline: none;
                        }
                        
                        .switchboard-select {
                            background: rgba(0, 0, 0, 0.8);
                            border: 1px solid #444;
                            color: #ffffff;
                            padding: 8px 10px;
                            border-radius: 3px;
                            font-family: 'Courier New', monospace;
                            font-size: 13px;
                            width: 100%;
                            margin-bottom: 8px;
                        }
                        
                        .input-control-row {
                            display: flex;
                            gap: 8px;
                            margin-bottom: 8px;
                            align-items: flex-start;
                        }
                        
                        .input-control-row .switchboard-input {
                            flex: 1;
                            margin-bottom: 0;
                        }
                        
                        .quick-token-buttons {
                            display: flex;
                            gap: 4px;
                            margin-bottom: 8px;
                        }
                        
                        .quick-token-buttons .switchboard-btn {
                            flex: 1;
                            font-size: 9px;
                            padding: 4px 2px;
                        }
                        
                        .action-buttons {
                            display: flex;
                            flex-wrap: wrap;
                            gap: 6px;
                            margin-bottom: 8px;
                        }
                        
                        .action-buttons .switchboard-btn {
                            flex: 1;
                            min-width: 120px;
                            font-size: 10px;
                        }
                        
                        .system-control-buttons {
                            display: flex;
                            gap: 6px;
                            margin-bottom: 8px;
                        }
                        
                        .system-control-buttons .switchboard-btn {
                            flex: 1;
                            font-size: 10px;
                        }
                        
                        .message-control-container {
                            margin-bottom: 8px;
                        }
                        
                        .preset-messages {
                            display: flex;
                            flex-direction: column;
                            gap: 4px;
                        }
                        
                        .preset-msg-btn {
                            background: rgba(0, 0, 0, 0.6);
                            border: 1px solid #666;
                            color: #cccccc;
                            padding: 4px 8px;
                            border-radius: 3px;
                            cursor: pointer;
                            font-size: 10px;
                            transition: all 0.2s ease;
                        }
                        
                        .preset-msg-btn:hover {
                            background: rgba(255, 255, 255, 0.1);
                            border-color: #00ffff;
                            color: #00ffff;
                        }
                        
                        .incentive-controls {
                            display: flex;
                            flex-direction: column;
                            gap: 6px;
                        }
                        
                        .status-indicator {
                            background: rgba(0, 0, 0, 0.6);
                            border: 1px solid #333;
                            border-radius: 3px;
                            padding: 4px 8px;
                            color: #00ff00;
                            font-family: 'Courier New', monospace;
                            font-size: 10px;
                            text-align: center;
                        }
                        
                        .status-display {
                            background: rgba(0, 0, 0, 0.6);
                            border: 1px solid #333;
                            border-radius: 3px;
                            padding: 6px 8px;
                            color: #ffaa00;
                            font-family: 'Courier New', monospace;
                            font-size: 10px;
                            text-align: center;
                            font-style: italic;
                        }
                        
                        /* Info Tooltip Styles */
                        .info-tooltip {
                            position: fixed;
                            top: 50%;
                            left: 50%;
                            transform: translate(-50%, -50%);
                            background: linear-gradient(135deg, #1a1a2e 0%, #2d2d44 50%, #1a1a2e 100%);
                            border: 2px solid #00ffff;
                            border-radius: 8px;
                            box-shadow: 
                                0 0 30px rgba(0, 255, 255, 0.4),
                                0 0 60px rgba(0, 0, 0, 0.8);
                            z-index: 10000;
                            max-width: 400px;
                            min-width: 300px;
                        }
                        
                        .tooltip-content {
                            color: #ffffff;
                        }
                        
                        .tooltip-header {
                            background: rgba(0, 255, 255, 0.1);
                            padding: 12px 16px;
                            border-bottom: 1px solid rgba(0, 255, 255, 0.3);
                            display: flex;
                            justify-content: space-between;
                            align-items: center;
                        }
                        
                        .tooltip-title {
                            color: #00ffff;
                            font-family: 'Orbitron', 'Courier New', monospace;
                            font-size: 14px;
                            font-weight: bold;
                            letter-spacing: 1px;
                        }
                        
                        .tooltip-close {
                            background: transparent;
                            border: none;
                            color: #ffffff;
                            font-size: 18px;
                            cursor: pointer;
                            width: 24px;
                            height: 24px;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            border-radius: 50%;
                            transition: all 0.2s ease;
                        }
                        
                        .tooltip-close:hover {
                            background: rgba(255, 255, 255, 0.2);
                            color: #ff4444;
                        }
                        
                        .tooltip-body {
                            padding: 16px;
                        }
                        
                        .tooltip-body p {
                            margin: 0;
                            font-size: 13px;
                            line-height: 1.5;
                            color: #cccccc;
                        }
                        
                        @keyframes lightPulse {
                            0% { opacity: 0.6; }
                            100% { opacity: 1; }
                        }
                        
                        @keyframes digitFlicker {
                            0%, 100% { opacity: 1; }
                            50% { opacity: 0.8; }
                        }
                        
                        /* Hide old control panels when switchboard is active */
                        #moderatorSwitchboard[style*="block"] ~ #moderatorColumnControl,
                        #moderatorSwitchboard[style*="block"] ~ #moderatorExperimentControl,
                        #moderatorSwitchboard[style*="block"] ~ #testingPanel {
                            display: none !important;
                        }
                        
                        /* Status Display Panel Styles */
                        .status-display-panel {
                            background: rgba(0, 0, 0, 0.7);
                            border: 2px solid #333;
                            border-radius: 6px;
                            padding: 12px;
                            margin-bottom: 8px;
                        }
                        
                        .status-row {
                            display: flex;
                            justify-content: space-between;
                            align-items: center;
                            margin-bottom: 8px;
                            padding: 4px 0;
                            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
                        }
                        
                        .status-row:last-child {
                            margin-bottom: 0;
                            border-bottom: none;
                        }
                        
                        .status-label {
                            color: #cccccc;
                            font-family: 'Courier New', monospace;
                            font-size: 13px;
                            font-weight: bold;
                            letter-spacing: 1px;
                        }
                        
                        .status-value {
                            color: #00ff88;
                            font-family: 'Courier New', monospace;
                            font-size: 14px;
                            font-weight: bold;
                            text-align: right;
                            background: rgba(0, 255, 136, 0.1);
                            padding: 2px 8px;
                            border-radius: 3px;
                            border: 1px solid rgba(0, 255, 136, 0.3);
                        }
                        </style>
                        
                        </div>
                    </div>
                    
                    <style>
                        /* Responsive design for decision grid and results */
                        @media (max-width: 1100px) {
                            #decisionGridContainer {
                                flex-direction: column !important;
                                align-items: center !important;
                                gap: 20px !important;
                            }
                            
                            #decisionGridContainer > div:first-child {
                                min-width: 100% !important;
                                max-width: 600px !important;
                                order: 2 !important;
                            }
                            
                            #decisionGridContainer > div:last-child {
                                order: 1 !important;
                            }
                            
                            #resultsPhase > div {
                                height: 220px !important;
                            }
                        }
                        
                        @media (max-width: 768px) {
                            #selectionSection {
                                flex-direction: column !important;
                                align-items: center !important;
                                gap: 15px !important;
                            }
                            
                            #selectionSection div {
                                width: 100% !important;
                                max-width: 320px !important;
                            }
                            
                            #decisionGridContainer > div:first-child {
                                min-width: 100% !important;
                                max-width: 100% !important;
                            }
                            
                            #resultsPhase > div {
                                height: 180px !important;
                            }
                        }
                        
                        /* Ensure nice alignment */
                        #decisionGridContainer > div {
                            margin-bottom: 0;
                        }
                    </style>
                    
                    <style>
                        @keyframes subtlePulse {
                            0%, 100% { opacity: 0.7; transform: scale(1); }
                            50% { opacity: 1; transform: scale(1.1); }
                        }
                        
                        @keyframes pulse {
                            0% { box-shadow: 0 0 0 0 rgba(88, 101, 242, 0.3); }
                            70% { box-shadow: 0 0 0 6px rgba(88, 101, 242, 0); }
                            100% { box-shadow: 0 0 0 0 rgba(88, 101, 242, 0); }
                        }
                        
                        @keyframes pulseGlow {
                            0% { 
                                box-shadow: 
                                    0 0 25px rgba(67, 181, 129, 0.8),
                                    0 0 50px rgba(67, 181, 129, 0.4),
                                    0 4px 12px rgba(0, 0, 0, 0.3);
                            }
                            100% { 
                                box-shadow: 
                                    0 0 35px rgba(67, 181, 129, 1),
                                    0 0 70px rgba(67, 181, 129, 0.6),
                                    0 6px 16px rgba(0, 0, 0, 0.4);
                            }
                        }
                        
                        @keyframes shake {
                            0%, 100% { transform: translateX(0); }
                            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
                            20%, 40%, 60%, 80% { transform: translateX(5px); }
                        }
                        
                        #lockInBtn:disabled {
                            background: linear-gradient(135deg, #4f545c, #40444b) !important;
                            color: #72767d !important;
                            cursor: not-allowed !important;
                            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2) !important;
                            transform: none !important;
                        }
                        
                        #lockInBtn:not(:disabled):active {
                            transform: translateY(0) scale(0.98) !important;
                            box-shadow: 0 1px 4px rgba(88, 101, 242, 0.4) !important;
                        }
                        
                        #lockInBtn:before {
                            content: '';
                            position: absolute;
                            top: 0;
                            left: -100%;
                            width: 100%;
                            height: 100%;
                            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.15), transparent);
                            transition: left 0.2s;
                            pointer-events: none;
                        }
                        
                        #lockInBtn:not(:disabled):hover:before {
                            left: 100%;
                        }
                        
                        /* Glassmorphism effect for selection section */
                        #selectionSection > div {
                            position: relative;
                        }
                        
                        #selectionSection > div::before {
                            content: '';
                            position: absolute;
                            top: 0;
                            left: 0;
                            right: 0;
                            bottom: 0;
                            background: linear-gradient(145deg, rgba(255, 255, 255, 0.02), rgba(255, 255, 255, 0.008));
                            border-radius: 8px;
                            pointer-events: none;
                        }
                        
                        /* Invite submenu styles */
                        .invite-submenu {
                            position: absolute;
                            top: 100%;
                            left: 0;
                            background: rgba(40, 43, 48, 0.98) !important;
                            backdrop-filter: blur(20px);
                            border-radius: 12px;
                            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
                            border: 1px solid rgba(114, 118, 125, 0.3);
                            z-index: 9999 !important;
                            margin-top: 8px;
                            min-width: 160px;
                            animation: slideDown 0.3s ease;
                        }
                        
                        .invite-submenu[style*="block"] {
                            display: block !important;
                        }
                        
                        .submenu-btn {
                            display: flex;
                            align-items: center;
                            gap: 8px;
                            width: 100%;
                            padding: 12px 16px;
                            background: transparent;
                            border: none;
                            color: #dcddde;
                            font-size: 14px;
                            cursor: pointer;
                            transition: all 0.3s ease;
                            text-align: left;
                        }
                        
                        .submenu-btn:first-child {
                            border-radius: 12px 12px 0 0;
                        }
                        
                        .submenu-btn:last-child {
                            border-radius: 0 0 12px 12px;
                        }
                        
                        .submenu-btn:only-child {
                            border-radius: 12px;
                        }
                        
                        .submenu-btn:hover {
                            background: rgba(102, 122, 255, 0.2);
                            color: #667aff;
                        }
                        
                        .submenu-btn i {
                            font-size: 16px;
                            opacity: 0.8;
                        }
                        
                        @keyframes slideDown {
                            from {
                                opacity: 0;
                                transform: translateY(-10px) scale(0.95);
                            }
                            to {
                                opacity: 1;
                                transform: translateY(0) scale(1);
                            }
                        }
                    </style>
                </div>
            </div>
        </div>
    </div>

    <div id="chat-container" class="chat-container" style="display:none;">
        <header class="modern-chat-header">
            <div class="chat-title">
                <i class="fas fa-globe-americas chat-icon"></i>
                <div class="status-pill-container-left">
                    <div class="status-pill connected">
                        <div class="pulse-dot"></div>
                        <span class="status-text">Connected</span>
                    </div>
                    <div class="user-count-pill" id="header-user-count">
                        <i class="fas fa-users"></i>
                        <span id="header-user-count-text">0 online</span>
                    </div>
                    <div class="admin-build-pill" id="admin-build-pill" style="display:none;">
                        <i class="fas fa-code-branch"></i>
                        <a href="https://github.com/BroManDudeGuyPhD/XenoGenesis/actions/workflows/deploy-self-hosted.yml" 
                           target="_blank" 
                           style="text-decoration: none; color: inherit; display: flex; align-items: center; gap: 4px;">
                            <span style="font-size: 11px;"></span>
                            <img src="https://github.com/BroManDudeGuyPhD/XenoGenesis/actions/workflows/deploy-self-hosted.yml/badge.svg?branch=mave" 
                                 alt="Deploy Status" 
                                 style="height: 14px; border-radius: 2px;">
                        </a>
                    </div>
                    <div class="room-pill" id="room-pill" style="display:none;">
                        <i class="fas fa-home"></i>
                        <span id="room-pill-text">Global</span>
                        <i class="fas fa-chevron-down room-pill-dropdown" id="room-pill-dropdown"></i>
                        <div class="room-pill-submenu" id="room-pill-submenu">
                            <div class="room-pill-submenu-item" id="leave-room-option">
                                <i class="fas fa-door-open"></i>
                                <span>Leave Room</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="action-cards-container">
                <div class="action-card create-card" id="create-card" data-tooltip="Create a new private room for gaming">
                    <div class="card-icon create-icon">
                        <i class="fas fa-plus-circle"></i>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">Create Room</h3>
                        <p class="card-description">Start a new private room</p>
                    </div>
                    <div class="card-glow create-glow"></div>
                </div>
                
                <div class="action-card join-card" id="join-card" data-tooltip="Join an existing room using a room code">
                    <div class="card-icon join-icon">
                        <i class="fas fa-door-open"></i>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">Join Room</h3>
                        <p class="card-description">Enter with room code</p>
                    </div>
                    <div class="card-glow join-glow"></div>
                </div>
                
                <div class="action-card invite-card invite-hidden" id="invite-card" data-tooltip="Generate invite codes for friends (Admin only)">
                    <div class="card-icon invite-icon">
                        <i class="fas fa-share-alt"></i>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">Invite Friends</h3>
                        <p class="card-description">Share room access</p>
                    </div>
                    <div class="card-glow invite-glow"></div>
                </div>
                
                <div class="action-card leave-card" id="leave-card" style="display:none;" data-tooltip="Leave current room and return to global chat">
                    <div class="card-icon leave-icon">
                        <i class="fas fa-sign-out-alt"></i>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">Leave Room</h3>
                        <p class="card-description">Return to global chat</p>
                    </div>
                    <div class="card-glow leave-glow"></div>
                </div>
            </div>
        </header>
        
        <!-- Floating Action Button for Mobile -->
        <div class="floating-action-container" id="floating-action-container" style="display:none;">
            <div class="fab-menu" id="fab-menu">
                <div class="fab-item create-fab" id="create-fab">
                    <div class="fab-icon">
                        <i class="fas fa-plus"></i>
                    </div>
                    <div class="fab-label">Create Room</div>
                </div>
                
                <div class="fab-item join-fab" id="join-fab">
                    <div class="fab-icon">
                        <i class="fas fa-door-open"></i>
                    </div>
                    <div class="fab-label">Join Room</div>
                </div>
                
                <div class="fab-item invite-fab" id="invite-fab" style="display:none;">
                    <div class="fab-icon">
                        <i class="fas fa-share"></i>
                    </div>
                    <div class="fab-label">Invite</div>
                </div>
            </div>
            
            <button class="fab-main" id="fab-main">
                <i class="fas fa-plus fab-main-icon"></i>
            </button>
        </div>
        <main class="chat-main">
            <div class="chat-sidebar">
                <h3><i class="fas fa-comments" id="rooms"></i> Rooms:</h3>
                <div id="rooms">
                    <h2 id="global-name">Global</h2>
                    <h2 id="room-name" style="display:none;"></h2>
                </div>
                <h3><i class="fas fa-users"></i> <span id="userCount">0 online</span></h3>
                <ul id="users"></ul>
            </div>
            <div class="chat-messages" id="globalChatDiv"></div>
            <div class="chat-messages" id="roomChatDiv" style="display:none"></div>
        </main>
        <div class="chat-form-container">
            <form id="chat-form">
                <input id="msg" type="text" placeholder="Enter Message" required autocomplete="off" />
                <button class="btn" id="sendButton"><i class="fas fa-paper-plane"></i> Send</button>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.9.2/qs.min.js"
        integrity="sha256-TDxXjkAUay70ae/QJBEpGKkpVslXaHHayklIVglFRT4=" crossorigin="anonymous"></script>
    
    <!-- React CDN for dither effect -->
    <script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
    <script src="https://unpkg.com/three@0.155.0/build/three.min.js"></script>
    <script src="/client/DitherEffect.js"></script>
    
    <script src="/socket.io/socket.io.js"></script>
    <script src="/client/Inventory.js"></script>
    <script>
        // Pass session data to client
        window.sessionData = <%- sessionData %>;
        
        // Immediately set admin status if available to reduce delay
        if (window.sessionData && window.sessionData.isAdmin !== undefined) {
            window.isGlobalAdmin = window.sessionData.isAdmin;
            
            // Show admin build status pill if admin
            setTimeout(() => {
                const adminBuildPill = document.getElementById('admin-build-pill');
                if (adminBuildPill && window.isGlobalAdmin) {
                    adminBuildPill.style.display = 'flex';
                }
            }, 100);
        }
        
        // Close invite options when clicking outside
        document.addEventListener('click', function(event) {
            const inviteCard = document.getElementById('invite-card');
            const inviteOptions = document.querySelector('.invite-options');
            
            if (inviteOptions && inviteOptions.style.display === 'block' && 
                inviteCard && !inviteCard.contains(event.target)) {
                inviteOptions.style.display = 'none';
                console.log('📁 Closed invite options (clicked outside)');
            }
        });
    </script>
    <script type="text/javascript" src="/client/client.js"></script>

    <script>
        // Animation control variables
        let starInterval = null;
        let spacecraftInterval = null;
        let spacecraftTimeout = null;
        let animationsActive = true;
        
        // Create twinkling stars effect
        function createTwinklingStar() {
            if (!animationsActive) return;
            
            const star = document.createElement('div');
            star.className = 'twinkle-star';
            
            // Random position
            const x = Math.random() * window.innerWidth;
            const y = Math.random() * window.innerHeight;
            
            star.style.left = x + 'px';
            star.style.top = y + 'px';
            
            // Random animation delay
            star.style.animationDelay = Math.random() * 3 + 's';
            
            document.body.appendChild(star);
            
            // Remove star after animation completes several cycles
            setTimeout(() => {
                if (star.parentNode) {
                    star.remove();
                }
            }, 12000 + Math.random() * 8000); // 12-20 seconds
        }
        
        // Create spacecraft effect
        function createSpacecraft() {
            if (!animationsActive) return;
            
            const spacecraft = document.createElement('div');
            spacecraft.className = 'spacecraft';
            
            // Start from random position on left side of screen
            const startY = Math.random() * (window.innerHeight * 0.6) + (window.innerHeight * 0.2);
            
            spacecraft.style.left = '-20px';
            spacecraft.style.top = startY + 'px';
            
            // Random animation delay
            spacecraft.style.animationDelay = Math.random() * 2 + 's';
            
            document.body.appendChild(spacecraft);
            
            // Remove spacecraft after animation
            setTimeout(() => {
                if (spacecraft.parentNode) {
                    spacecraft.remove();
                }
            }, 10000); // 10 seconds (animation is 8s + delay)
        }
        
        // Stop all space animations
        function stopSpaceAnimations() {
            animationsActive = false;
            
            // Stop dither background effect
            if (typeof window.stopDitherBackground === 'function') {
                window.stopDitherBackground();
                console.log('🌌 Dither background effect stopped - entering game mode');
            }
            
            // Change background to Discord gray when entering game mode
            document.body.style.backgroundColor = '#2c2f33';
        }
        
        // Start space animations
        function startSpaceAnimations() {
            animationsActive = true;
            
            // Set background to black for space theme
            document.body.style.backgroundColor = '#000000';
            
            // Initialize dither background effect
            if (typeof window.initDitherBackground === 'function') {
                window.initDitherBackground('dither-background');
                console.log('🌌 Enhanced retro dither background effect initialized');
            } else {
                console.warn('Dither effect not loaded, using solid background');
                // Fallback: solid dark background
                document.body.style.background = 'linear-gradient(135deg, #0a0a0a 0%, #1a0a1a 50%, #0a0a2a 100%)';
            }
        }
        
        // Global function to stop animations (can be called from client.js)
        window.stopSpaceAnimationsOnLogin = function() {
            if (animationsActive) {
                stopSpaceAnimations();
            }
        };
        
        // Check if user is actually in game mode (simplified)
        function checkGameMode() {
            const chatContainer = document.getElementById('chat-container');
            const landingPage = document.getElementById('landingPage');
            
            // If landing page is hidden and chat is shown, user is logged in
            if (landingPage && landingPage.style.display === 'none' && 
                chatContainer && chatContainer.style.display === '') {
                if (animationsActive) {
                    stopSpaceAnimations();
                }
            }
        }
        
        // Initialize animations when page loads
        window.addEventListener('load', function() {
            startSpaceAnimations();
            
            // Check for game mode every 2 seconds
            setInterval(checkGameMode, 2000);
            
            // Also listen for visibility changes on key elements
            const observer = new MutationObserver(checkGameMode);
            
            // Observe chat container
            const chatContainer = document.getElementById('chat-container');
            if (chatContainer) {
                observer.observe(chatContainer, { attributes: true, attributeFilter: ['style'] });
            }
            
            // Observe experiment container
            const experimentContainer = document.getElementById('experimentContainer');
            if (experimentContainer) {
                observer.observe(experimentContainer, { attributes: true, attributeFilter: ['style'] });
            }
            
            // Initialize token pool display only if not already set by game state
            const globalTokenPool = document.getElementById('globalTokenPool');
            const tokenPoolBar = document.getElementById('tokenPoolBar');
            const culturantCount = document.getElementById('culturantCount');
            
            if (globalTokenPool && (globalTokenPool.textContent === '2500' || globalTokenPool.textContent === '--')) {
                // Only initialize if still at default value
                console.log('🎯 Token pool display initialized to default');
            }
            
            if (tokenPoolBar && tokenPoolBar.style.width === '') {
                tokenPoolBar.style.width = '100%';
                console.log('🎯 Token pool bar initialized');
            }
            
            if (culturantCount) {
                culturantCount.textContent = '0';
            }
        });

        // Signup form handling
        document.addEventListener('DOMContentLoaded', function() {
            const createAccountBtn = document.getElementById('createAccountBtn');
            const signupModal = document.getElementById('signupModal');
            
            if (createAccountBtn) {
                createAccountBtn.addEventListener('click', function() {
                    const username = document.getElementById('signupUsername').value.trim();
                    const password = document.getElementById('signupPassword').value;
                    const confirmPassword = document.getElementById('signupConfirmPassword').value;
                    const inviteCode = document.getElementById('signupInviteCode').value.trim().toUpperCase();
                    
                    // Validation
                    if (!username || !password || !confirmPassword || !inviteCode) {
                        showGlassmorphismAlert('Missing Information', 'Please fill in all fields to create your account.', 'error');
                        return;
                    }
                    
                    if (username.length < 3) {
                        showGlassmorphismAlert('Invalid Username', 'Username must be at least 3 characters long.', 'error');
                        return;
                    }
                    
                    if (password.length < 6) {
                        showGlassmorphismAlert('Weak Password', 'Password must be at least 6 characters long.', 'error');
                        return;
                    }
                    
                    if (password !== confirmPassword) {
                        showGlassmorphismAlert('Password Mismatch', 'Passwords do not match. Please try again.', 'error');
                        return;
                    }
                    
                    if (inviteCode.length !== 8) {
                        showGlassmorphismAlert('Invalid Invite Code', 'Invite code must be exactly 8 characters.', 'error');
                        return;
                    }
                    
                    // Send signup request with invite code
                    if (typeof socket !== 'undefined') {
                        socket.emit('signUp', {
                            username: username,
                            password: password,
                            inviteCode: inviteCode
                        });
                        
                        // Close modal after sending request
                        signupModal.style.display = 'none';
                        
                        // Clear form
                        document.getElementById('signupUsername').value = '';
                        document.getElementById('signupPassword').value = '';
                        document.getElementById('signupConfirmPassword').value = '';
                        document.getElementById('signupInviteCode').value = '';
                        
                        showGlassmorphismAlert('Creating Account...', 'Please wait while we validate your invite code and create your account.', 'info');
                    } else {
                        showGlassmorphismAlert('Connection Error', 'Unable to connect to server. Please refresh and try again.', 'error');
                    }
                });
            }

            // Close modal when clicking outside
            window.onclick = function(event) {
                if (event.target === signupModal) {
                    signupModal.style.display = 'none';
                }
            }

            // Enter key handling for signup form
            function handleSignupEnterKey(event) {
                if (event.key === 'Enter') {
                    createAccountBtn.click();
                }
            }

            document.getElementById('signupUsername')?.addEventListener('keypress', handleSignupEnterKey);
            document.getElementById('signupPassword')?.addEventListener('keypress', handleSignupEnterKey);
            document.getElementById('signupConfirmPassword')?.addEventListener('keypress', handleSignupEnterKey);
            document.getElementById('signupInviteCode')?.addEventListener('keypress', handleSignupEnterKey);
        });

        // Real-time password validation functions
        function validatePasswordRequirements() {
            const password = document.getElementById('signupPassword').value;
            const requirementsDiv = document.getElementById('passwordRequirements');
            const lengthReq = document.getElementById('lengthReq');
            
            // Show requirements when user starts typing
            if (password.length > 0) {
                requirementsDiv.style.display = 'block';
            } else {
                requirementsDiv.style.display = 'none';
                return;
            }
            
            // Check length requirement
            const meetsLength = password.length >= 6;
            lengthReq.style.color = meetsLength ? '#43b581' : '#f04747';
            lengthReq.innerHTML = meetsLength ? 
                '<span>✓</span> At least 6 characters' : 
                '<span>•</span> At least 6 characters';
            
            // Update password field border color
            const passwordField = document.getElementById('signupPassword');
            if (meetsLength) {
                passwordField.style.borderColor = 'rgba(67, 181, 129, 0.6)';
            } else {
                passwordField.style.borderColor = 'rgba(240, 71, 71, 0.6)';
            }
            
            // Also trigger confirm password validation
            validatePasswordMatch();
        }

        function validatePasswordMatch() {
            const password = document.getElementById('signupPassword').value;
            const confirmPassword = document.getElementById('signupConfirmPassword').value;
            const matchIndicator = document.getElementById('passwordMatchIndicator');
            const matchText = document.getElementById('passwordMatchText');
            const confirmField = document.getElementById('signupConfirmPassword');
            
            // Only show indicator if user has typed in confirm password
            if (confirmPassword.length === 0) {
                matchIndicator.style.display = 'none';
                confirmField.style.borderColor = 'rgba(114, 118, 125, 0.4)';
                return;
            }
            
            matchIndicator.style.display = 'block';
            
            if (password === confirmPassword && password.length > 0) {
                matchText.style.color = '#43b581';
                matchText.innerHTML = '✓ Passwords match';
                confirmField.style.borderColor = 'rgba(67, 181, 129, 0.6)';
            } else {
                matchText.style.color = '#f04747';
                matchText.innerHTML = '• Passwords do not match';
                confirmField.style.borderColor = 'rgba(240, 71, 71, 0.6)';
            }
        }

        // Close modals when clicking outside
        document.addEventListener('DOMContentLoaded', function() {
            // Get all modals
            const modals = document.querySelectorAll('.modal');
            
            modals.forEach(modal => {
                modal.addEventListener('click', function(event) {
                    // If the click is on the modal background (not the content), close the modal
                    if (event.target === modal) {
                        modal.style.display = 'none';
                    }
                });
                
                // Also handle touch events for mobile
                modal.addEventListener('touchstart', function(event) {
                    if (event.target === modal) {
                        modal.style.display = 'none';
                    }
                });
            });
        });
    </script>
    
    <!-- Moderator Context Menu -->
    <div class="moderator-context-overlay" id="moderatorContextOverlay"></div>
    <div class="moderator-context-menu" id="moderatorContextMenu">
        <h3 class="moderator-menu-title">Moderator Options</h3>
        <p class="moderator-menu-subtitle">Choose how to handle leaving the room</p>
        <div class="moderator-menu-buttons">
            <button class="moderator-menu-button end-experiment" id="endExperimentBtn">
                <i class="fas fa-stop-circle"></i>
                End Experiment
            </button>
            <button class="moderator-menu-button pause-experiment" id="pauseExperimentBtn">
                <i class="fas fa-pause-circle"></i>
                Pause Experiment
            </button>
        </div>
    </div>

</body>

</html>